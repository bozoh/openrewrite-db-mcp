[
  {
    "name": "SolverManager: use builder API",
    "category": "analysis",
    "sub-category": "ai/timefold/solver/migration/v8",
    "tags": [
      "analysis",
      "ai/timefold/solver/migration/v8"
    ],
    "description": "Use solveBuilder() instead of deprecated solve methods on SolveManager.",
    "link": "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/solvermanagerbuilderrecipe.html",
    "package": "ai.timefold.solver.migration.v8.SolverManagerBuilderRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-third-party:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-third-party:RELEASE -Drewrite.activeRecipes=ai.timefold.solver.migration.v8.SolverManagerBuilderRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "URIs created with an HTTP scheme",
    "category": "android",
    "sub-category": "analysis/search",
    "tags": [
      "android",
      "analysis/search"
    ],
    "description": "This is a sample recipe demonstrating a simple application of local data flow analysis.",
    "link": "https://docs.openrewrite.org/recipes/analysis/search/uricreatedwithhttpscheme.html",
    "package": "org.openrewrite.analysis.search.UriCreatedWithHttpScheme",
    "dependency": "org.openrewrite.meta:rewrite-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.meta:rewrite-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.analysis.search.UriCreatedWithHttpScheme -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrates to Apache POI 3.17",
    "category": "azul",
    "sub-category": "apache/poi",
    "tags": [
      "azul",
      "apache/poi"
    ],
    "description": "Migrates to the last Apache POI 3.x release. This recipe modifies build files and makes changes to deprecated/preferred APIs that have changed between versions.",
    "link": "https://docs.openrewrite.org/recipes/apache/poi/upgradeapachepoi_3_17.html",
    "package": "org.openrewrite.apache.poi.UpgradeApachePoi_3_17",
    "dependency": "org.openrewrite.recipe:rewrite-apache:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-apache:RELEASE -Drewrite.activeRecipes=org.openrewrite.apache.poi.UpgradeApachePoi_3_17 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Biome recommendations",
    "category": "codemods",
    "sub-category": "codemods",
    "tags": [
      "codemods",
      "codemods"
    ],
    "description": "Run Biome recommended settings on your projects.",
    "link": "https://docs.openrewrite.org/recipes/codemods/biome.html",
    "package": "org.openrewrite.codemods.Biome",
    "dependency": "org.openrewrite.recipe:rewrite-codemods:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-codemods:RELEASE -Drewrite.activeRecipes=org.openrewrite.codemods.Biome -Drewrite.exportDatatables=true"
  },
  {
    "name": "Lint UI5 projects with UI5 linter",
    "category": "codemods",
    "sub-category": "codemods",
    "tags": [
      "codemods",
      "codemods"
    ],
    "description": "Runs the UI5 Linter, a static code analysis tool for UI5 projects. It checks JavaScript, TypeScript, XML, JSON, and other files in your project and reports findings.",
    "link": "https://docs.openrewrite.org/recipes/codemods/ui5.html",
    "package": "org.openrewrite.codemods.UI5",
    "dependency": "org.openrewrite.recipe:rewrite-codemods:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-codemods:RELEASE -Drewrite.activeRecipes=org.openrewrite.codemods.UI5 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Lint source code with ESLint",
    "category": "codemods",
    "sub-category": "codemods",
    "tags": [
      "codemods",
      "codemods"
    ],
    "description": "Run ESLint across the code to fix common static analysis issues in the code.  This requires the code to have an existing ESLint configuration.",
    "link": "https://docs.openrewrite.org/recipes/codemods/eslint.html",
    "package": "org.openrewrite.codemods.ESLint",
    "dependency": "org.openrewrite.recipe:rewrite-codemods:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-codemods:RELEASE -Drewrite.activeRecipes=org.openrewrite.codemods.ESLint -Drewrite.exportDatatables=true"
  },
  {
    "name": "Run Putout",
    "category": "codemods",
    "sub-category": "codemods",
    "tags": [
      "codemods",
      "codemods"
    ],
    "description": "Run Putout on your projects.",
    "link": "https://docs.openrewrite.org/recipes/codemods/putout.html",
    "package": "org.openrewrite.codemods.Putout",
    "dependency": "org.openrewrite.recipe:rewrite-codemods:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-codemods:RELEASE -Drewrite.activeRecipes=org.openrewrite.codemods.Putout -Drewrite.exportDatatables=true"
  },
  {
    "name": "PlexusStringUtils Refaster recipes",
    "category": "codemods",
    "sub-category": "codehaus/plexus",
    "tags": [
      "codemods",
      "codehaus/plexus"
    ],
    "description": "Refaster template recipes for org.openrewrite.codehaus.plexus.PlexusStringUtils.",
    "link": "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipes.html",
    "package": "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes",
    "dependency": "org.openrewrite.recipe:rewrite-apache:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-apache:RELEASE -Drewrite.activeRecipes=org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate xmlns entries in weblogic.xml files to WebLogic 15.1.1",
    "category": "compiled",
    "sub-category": "com/oracle/weblogic/rewrite",
    "tags": [
      "compiled",
      "com/oracle/weblogic/rewrite"
    ],
    "description": "This recipe will update the xmlns entries in weblogic.xml files to WebLogic 15.1.1",
    "link": "https://docs.openrewrite.org/recipes/com/oracle/weblogic/rewrite/weblogicxmlwebappnamespace1511.html",
    "package": "com.oracle.weblogic.rewrite.WebLogicXmlWebAppNamespace1511",
    "dependency": "org.openrewrite.recipe:rewrite-third-party:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-third-party:RELEASE -Drewrite.activeRecipes=com.oracle.weblogic.rewrite.WebLogicXmlWebAppNamespace1511 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find LST provenance",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Produces a data table showing what versions of OpenRewrite/Moderne tooling was used to produce a given LST.",
    "link": "https://docs.openrewrite.org/recipes/core/findlstprovenance.html",
    "package": "org.openrewrite.FindLstProvenance",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindLstProvenance -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find call graph",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Produces a data table where each row represents a method call.",
    "link": "https://docs.openrewrite.org/recipes/core/findcallgraph.html",
    "package": "org.openrewrite.FindCallGraph",
    "dependency": "org.openrewrite.recipe:rewrite-all:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-all:RELEASE -Drewrite.activeRecipes=org.openrewrite.FindCallGraph -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find colliding source files",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Finds source files which share a path with another source file. There should always be exactly one source file per path within a repository. This is a diagnostic for finding problems in OpenRewrite parsers/build plugins.",
    "link": "https://docs.openrewrite.org/recipes/core/findcollidingsourcefiles.html",
    "package": "org.openrewrite.FindCollidingSourceFiles",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindCollidingSourceFiles -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find deserialization errors",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Produces a data table collecting all deserialization errors of serialized LSTs.",
    "link": "https://docs.openrewrite.org/recipes/core/finddeserializationerrors.html",
    "package": "org.openrewrite.FindDeserializationErrors",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindDeserializationErrors -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find duplicate source files",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Record the presence of LSTs with duplicate paths, indicating that the same file was parsed more than once.",
    "link": "https://docs.openrewrite.org/recipes/core/findduplicatesourcefiles.html",
    "package": "org.openrewrite.FindDuplicateSourceFiles",
    "dependency": "org.openrewrite.recipe:rewrite-all:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-all:RELEASE -Drewrite.activeRecipes=org.openrewrite.FindDuplicateSourceFiles -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find files",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Find files by source path. Paths are always interpreted as relative to the repository root.",
    "link": "https://docs.openrewrite.org/recipes/core/findsourcefiles.html",
    "package": "org.openrewrite.FindSourceFiles",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindSourceFiles -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find instances of type Quark",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Quark source files are pointers to the existence of a file without capturing any of the contents of the file.",
    "link": "https://docs.openrewrite.org/recipes/core/findquarks.html",
    "package": "org.openrewrite.FindQuarks",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindQuarks -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find source files with ParseExceptionResult markers",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "This recipe explores parse failures after an LST is produced for classifying the types of failures that can occur and prioritizing fixes according to the most common problems.",
    "link": "https://docs.openrewrite.org/recipes/core/findparsefailures.html",
    "package": "org.openrewrite.FindParseFailures",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindParseFailures -Drewrite.exportDatatables=true"
  },
  {
    "name": "Language composition report",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "Counts the number of lines of the various kinds of source code and data formats parsed by OpenRewrite. Comments are not included in line counts. This recipe emits its results as two data tables, making no changes to any source file. One data table is per-file, the other is per-repository.",
    "link": "https://docs.openrewrite.org/recipes/core/languagecomposition.html",
    "package": "org.openrewrite.LanguageComposition",
    "dependency": "org.openrewrite.recipe:rewrite-all:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-all:RELEASE -Drewrite.activeRecipes=org.openrewrite.LanguageComposition -Drewrite.exportDatatables=true"
  },
  {
    "name": "List runtime classpath",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "A diagnostic utility which emits the runtime classpath to a data table.",
    "link": "https://docs.openrewrite.org/recipes/core/listruntimeclasspath.html",
    "package": "org.openrewrite.ListRuntimeClasspath",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.ListRuntimeClasspath -Drewrite.exportDatatables=true"
  },
  {
    "name": "Show Git source control metadata",
    "category": "core",
    "sub-category": "core",
    "tags": [
      "core",
      "core"
    ],
    "description": "List out the contents of each unique GitProvenance marker in the set of source files. When everything is working correctly, exactly one such marker should be printed as all source files are expected to come from the same repository / branch / commit hash.",
    "link": "https://docs.openrewrite.org/recipes/core/findgitprovenance.html",
    "package": "org.openrewrite.FindGitProvenance",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.FindGitProvenance -Drewrite.exportDatatables=true"
  },
  {
    "name": "Apache Maven best practices",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "A collection of recipes that apply best practices to Maven POMs. Some of these recipes affect build stability, so they are reported as security issues in the DevCenter card.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/apachemavenbestpractices.html",
    "package": "io.moderne.devcenter.ApacheMavenBestPractices",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.ApacheMavenBestPractices -Drewrite.exportDatatables=true"
  },
  {
    "name": "DevCenter",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "This is a default DevCenter configuration that can be used as a starting point for your own DevCenter configuration. It includes a combination of upgrades, migrations, and security fixes. You can customize this configuration to suit your needs. For more information on how to customize your DevCenter configuration, see the DevCenter documentation.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/devcenterstarter.html",
    "package": "io.moderne.devcenter.DevCenterStarter",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.DevCenterStarter -Drewrite.exportDatatables=true"
  },
  {
    "name": "DevCenter for Apache",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "A DevCenter that tracks the latest Apache Maven parent POM versions and applies best practices.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/apachedevcenter.html",
    "package": "io.moderne.devcenter.ApacheDevCenter",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.ApacheDevCenter -Drewrite.exportDatatables=true"
  },
  {
    "name": "DevCenter for Apache Maven",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "A DevCenter that tracks the latest Apache Maven parent POM versions and applies best practices. This DevCenter includes recipes to upgrade the parent POMs of Apache Maven, as well as a collection of best practices for Maven POMs.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/apachemavendevcenter.html",
    "package": "io.moderne.devcenter.ApacheMavenDevCenter",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.ApacheMavenDevCenter -Drewrite.exportDatatables=true"
  },
  {
    "name": "OWASP top ten",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "This recipe is a starter card to reveal common OWASP Top 10 issues in your source code. You can customize this configuration to suit your needs. For more information on how to customize your DevCenter configuration, see the DevCenter documentation.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/securitystarter.html",
    "package": "io.moderne.devcenter.SecurityStarter",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.SecurityStarter -Drewrite.exportDatatables=true"
  },
  {
    "name": "Move to JUnit 5",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "Move to JUnit Jupiter.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/junitjupiterupgrade.html",
    "package": "io.moderne.devcenter.JUnitJupiterUpgrade",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.JUnitJupiterUpgrade -Drewrite.exportDatatables=true"
  },
  {
    "name": "Report as security issues",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "Look for results produced by recipes in the same recipe list that this recipe is part of, and report them as security issues in DevCenter.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/reportassecurityissues.html",
    "package": "io.moderne.devcenter.ReportAsSecurityIssues",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.ReportAsSecurityIssues -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade Apache Maven Parent",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "Upgrades the Apache Maven parent POM to the latest version.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/upgrademavenparent.html",
    "package": "io.moderne.devcenter.UpgradeMavenParent",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.UpgradeMavenParent -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade Apache Maven Parent",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "Upgrades the Apache Maven parent POM to the latest version.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/upgrademavenpluginsparent.html",
    "package": "io.moderne.devcenter.UpgradeMavenPluginsParent",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.UpgradeMavenPluginsParent -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade Apache Maven Parent",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "Upgrades the Apache Maven parent POM to the latest version.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/upgrademavensharedparent.html",
    "package": "io.moderne.devcenter.UpgradeMavenSharedParent",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.UpgradeMavenSharedParent -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade Apache Parent POM",
    "category": "devcenter",
    "sub-category": "devcenter",
    "tags": [
      "devcenter",
      "devcenter"
    ],
    "description": "Upgrades the Apache parent POM to the latest version.",
    "link": "https://docs.openrewrite.org/recipes/devcenter/upgradeapacheparent.html",
    "package": "io.moderne.devcenter.UpgradeApacheParent",
    "dependency": "io.moderne.recipe:rewrite-devcenter:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=io.moderne.recipe:rewrite-devcenter:RELEASE -Drewrite.activeRecipes=io.moderne.devcenter.UpgradeApacheParent -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade to Cucumber-JVM 7.x",
    "category": "devcenter",
    "sub-category": "cucumber/jvm",
    "tags": [
      "devcenter",
      "cucumber/jvm"
    ],
    "description": "Upgrade to Cucumber-JVM 7.x from any previous version.",
    "link": "https://docs.openrewrite.org/recipes/cucumber/jvm/upgradecucumber7x.html",
    "package": "org.openrewrite.cucumber.jvm.UpgradeCucumber7x",
    "dependency": "org.openrewrite.recipe:rewrite-cucumber-jvm:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-cucumber-jvm:RELEASE -Drewrite.activeRecipes=org.openrewrite.cucumber.jvm.UpgradeCucumber7x -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find uses of docker base images",
    "category": "dotnet",
    "sub-category": "docker/search",
    "tags": [
      "dotnet",
      "docker/search"
    ],
    "description": "Produce an impact analysis of base images used in Dockerfiles, .gitlab-ci files, Kubernetes Deployment file, etc.",
    "link": "https://docs.openrewrite.org/recipes/docker/search/finddockerimageuses.html",
    "package": "org.openrewrite.docker.search.FindDockerImageUses",
    "dependency": "org.openrewrite.recipe:rewrite-docker:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-docker:RELEASE -Drewrite.activeRecipes=org.openrewrite.docker.search.FindDockerImageUses -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace OSSRH secrets with Sonatype secrets",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Replace deprecated OSSRH_S01 secrets with new Sonatype secrets in GitHub Actions workflows. This is an example use of the ReplaceSecrets and ReplaceSecretKeys recipes combined used to update the Maven publishing secrets in OpenRewrite's GitHub organization.",
    "link": "https://docs.openrewrite.org/recipes/github/replaceossrhsecretswithsonatype.html",
    "package": "org.openrewrite.github.ReplaceOssrhSecretsWithSonatype",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.ReplaceOssrhSecretsWithSonatype -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add manual workflow trigger",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "You can manually trigger workflow runs. To trigger specific workflows in a repository, use the workflow_dispatch event.",
    "link": "https://docs.openrewrite.org/recipes/github/addmanualtrigger.html",
    "package": "org.openrewrite.github.AddManualTrigger",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.AddManualTrigger -Drewrite.exportDatatables=true"
  },
  {
    "name": "Cancel in-progress workflow when it is triggered again",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "When a workflow is already running and would be triggered again, cancel the existing workflow. See styfle/cancel-workflow-action for details.",
    "link": "https://docs.openrewrite.org/recipes/github/autocancelinprogressworkflow.html",
    "package": "org.openrewrite.github.AutoCancelInProgressWorkflow",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.AutoCancelInProgressWorkflow -Drewrite.exportDatatables=true"
  },
  {
    "name": "Check for github-actions updates daily",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Set dependabot to check for github-actions updates daily.",
    "link": "https://docs.openrewrite.org/recipes/github/dependabotcheckforgithubactionsupdatesdaily.html",
    "package": "org.openrewrite.github.DependabotCheckForGithubActionsUpdatesDaily",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.DependabotCheckForGithubActionsUpdatesDaily -Drewrite.exportDatatables=true"
  },
  {
    "name": "Check for github-actions updates weekly",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Set dependabot to check for github-actions updates weekly.",
    "link": "https://docs.openrewrite.org/recipes/github/dependabotcheckforgithubactionsupdatesweekly.html",
    "package": "org.openrewrite.github.DependabotCheckForGithubActionsUpdatesWeekly",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.DependabotCheckForGithubActionsUpdatesWeekly -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find GitHub action secret references",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Help identify and inventory your GitHub secrets that are being used in GitHub actions.",
    "link": "https://docs.openrewrite.org/recipes/github/findgithubactionsecretreferences.html",
    "package": "org.openrewrite.github.FindGitHubActionSecretReferences",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.FindGitHubActionSecretReferences -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find jobs missing timeout",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Find GitHub Actions jobs missing a timeout.",
    "link": "https://docs.openrewrite.org/recipes/github/findmissingtimeout.html",
    "package": "org.openrewrite.github.FindMissingTimeout",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.FindMissingTimeout -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove all cron triggers",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Removes all cron triggers from a workflow.",
    "link": "https://docs.openrewrite.org/recipes/github/removeallcrontriggers.html",
    "package": "org.openrewrite.github.RemoveAllCronTriggers",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.RemoveAllCronTriggers -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unused workflow dispatch inputs",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Remove workflow_dispatch inputs that are not referenced anywhere in the workflow file.",
    "link": "https://docs.openrewrite.org/recipes/github/removeunusedworkflowdispatchinputs.html",
    "package": "org.openrewrite.github.RemoveUnusedWorkflowDispatchInputs",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.RemoveUnusedWorkflowDispatchInputs -Drewrite.exportDatatables=true"
  },
  {
    "name": "Setup Java dependency caching",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "GitHub actions supports dependency caching on Maven and Gradle projects. See the blog post.",
    "link": "https://docs.openrewrite.org/recipes/github/setupjavacaching.html",
    "package": "org.openrewrite.github.SetupJavaCaching",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.SetupJavaCaching -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade actions/setup-java java-version",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Update the Java version used by actions/setup-java if it is below the expected version number.",
    "link": "https://docs.openrewrite.org/recipes/github/setupjavaupgradejavaversion.html",
    "package": "org.openrewrite.github.SetupJavaUpgradeJavaVersion",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.SetupJavaUpgradeJavaVersion -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade slackapi/slack-github-action",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Update the Slack GitHub Action to use version 2.0.",
    "link": "https://docs.openrewrite.org/recipes/github/upgradeslacknotificationversion2.html",
    "package": "org.openrewrite.github.UpgradeSlackNotificationVersion2",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.UpgradeSlackNotificationVersion2 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use actions/setup-java IBM semeru distribution",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Adopt OpenJDK got moved to Eclipse Temurin and won't be updated anymore. It is highly recommended to migrate workflows from adopt-openj9 to IBM semeru to keep receiving software and security updates. See more details in the Good-bye AdoptOpenJDK post.",
    "link": "https://docs.openrewrite.org/recipes/github/setupjavaadoptopenj9tosemeru.html",
    "package": "org.openrewrite.github.SetupJavaAdoptOpenj9ToSemeru",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.SetupJavaAdoptOpenj9ToSemeru -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use actions/setup-java temurin distribution",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Adopt OpenJDK got moved to Eclipse Temurin and won't be updated anymore. It is highly recommended to migrate workflows from adopt to temurin to keep receiving software and security updates. See more details in the Good-bye AdoptOpenJDK post.",
    "link": "https://docs.openrewrite.org/recipes/github/setupjavaadoptopenjdktotemurin.html",
    "package": "org.openrewrite.github.SetupJavaAdoptOpenJDKToTemurin",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.SetupJavaAdoptOpenJDKToTemurin -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use actions/setup-java temurin distribution as they are cached in hosted runners",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Host runners include Temurin by default as part of the hosted tool cache. Using Temurin speeds up builds as there is no need to download and configure the Java SDK with every build.",
    "link": "https://docs.openrewrite.org/recipes/github/prefertemurindistributions.html",
    "package": "org.openrewrite.github.PreferTemurinDistributions",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.PreferTemurinDistributions -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use secrets: inherit if possible",
    "category": "github",
    "sub-category": "github",
    "tags": [
      "github",
      "github"
    ],
    "description": "Pass all secrets to a reusable workflow using secrets: inherit. See Simplify using secrets with reusable workflows for details.",
    "link": "https://docs.openrewrite.org/recipes/github/prefersecretsinheritworkflow.html",
    "package": "org.openrewrite.github.PreferSecretsInheritWorkflow",
    "dependency": "org.openrewrite.recipe:rewrite-github-actions:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-github-actions:RELEASE -Drewrite.activeRecipes=org.openrewrite.github.PreferSecretsInheritWorkflow -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find an Unleash feature flag",
    "category": "github",
    "sub-category": "featureflags/unleash/search",
    "tags": [
      "github",
      "featureflags/unleash/search"
    ],
    "description": "Find an Unleash feature flag.",
    "link": "https://docs.openrewrite.org/recipes/featureflags/unleash/search/findfeatureflag.html",
    "package": "org.openrewrite.featureflags.unleash.search.FindFeatureFlag",
    "dependency": "org.openrewrite.recipe:rewrite-feature-flags:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-feature-flags:RELEASE -Drewrite.activeRecipes=org.openrewrite.featureflags.unleash.search.FindFeatureFlag -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace legacy attribute index syntax",
    "category": "hcl",
    "sub-category": "hcl",
    "tags": [
      "hcl",
      "hcl"
    ],
    "description": "Replace legacy attribute index syntax (.0) with the new syntax ([0]).",
    "link": "https://docs.openrewrite.org/recipes/hcl/replacelegacyattributeindexsyntax.html",
    "package": "org.openrewrite.hcl.ReplaceLegacyAttributeIndexSyntax",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.hcl.ReplaceLegacyAttributeIndexSyntax -Drewrite.exportDatatables=true"
  },
  {
    "name": "Stylize Groovy code to omit parentheses",
    "category": "hcl",
    "sub-category": "groovy/format",
    "tags": [
      "hcl",
      "groovy/format"
    ],
    "description": "Omit parentheses for last argument lambdas in Groovy code.",
    "link": "https://docs.openrewrite.org/recipes/groovy/format/omitparenthesesformat.html",
    "package": "org.openrewrite.groovy.format.OmitParenthesesFormat",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.groovy.format.OmitParenthesesFormat -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate Hibernate dependencies to 6.0.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will migrate any existing dependencies on Hibernate 5.x to the latest 6.0.x release. This migration will include the adjustment to the new org.hibernate.orm group ID. It accounts for artifacts names that both do and do not include the jakarta suffix and it will change both dependencies and managed dependencies.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernatedependencies60.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernateDependencies60",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernateDependencies60 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate 6.0.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate 6.0.x. The hibernate dependencies will be updated to use the new org.hibernate.orm group ID and the recipe will make changes necessary to use Hibernate with Jakarta EE 9.0.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate60.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernate60",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernate60 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate 6.1.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate 6.1.x. The hibernate dependencies will   be updated to use the new org.hibernate.orm group ID and the recipe will make changes necessary to use Hibernate with Jakarta EE 9.0.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate61.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernate61",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernate61 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate 6.2.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate 6.2.x.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate62.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernate62",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernate62 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate 6.3.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate 6.3.x.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate63.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernate63",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernate63 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate 6.4.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate 6.4.x.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate64.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernate64",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernate64 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate 6.5.x",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate 6.5.x.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate65.html",
    "package": "org.openrewrite.hibernate.MigrateToHibernate65",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateToHibernate65 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Rename JavaTypeDescriptor and SqlTypeDescriptor to JavaType and SqlType",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Rename JavaTypeDescriptor and SqlTypeDescriptor to JavaType and SqlType respectively. See https://github.com/hibernate/hibernate-orm/blob/6.0/migration-guide.adoc#type-system",
    "link": "https://docs.openrewrite.org/recipes/hibernate/typedescriptortotype.html",
    "package": "org.openrewrite.hibernate.TypeDescriptorToType",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.TypeDescriptorToType -Drewrite.exportDatatables=true"
  },
  {
    "name": "@Type annotation type parameter migration",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Hibernate 6.x has 'type' parameter of type String replaced with 'value' of type class.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/typeannotationparameter.html",
    "package": "org.openrewrite.hibernate.TypeAnnotationParameter",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.TypeAnnotationParameter -Drewrite.exportDatatables=true"
  },
  {
    "name": "AddScalarPreferStandardBasicTypesForHibernate5",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Prefer the use of StandardBasicTypes.* in NativeQuery.addScalar(...) invocations.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/addscalarpreferstandardbasictypes.html",
    "package": "org.openrewrite.hibernate.AddScalarPreferStandardBasicTypes",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.AddScalarPreferStandardBasicTypes -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate UserType to Hibernate 6",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "With Hibernate 6 the UserType interface received a type parameter making it more strictly typed. This recipe applies the changes required to adhere to this change.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migrateusertype.html",
    "package": "org.openrewrite.hibernate.MigrateUserType",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateUserType -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migration of ResultCheckStyle to Expectation",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Will migrate the usage of org.hibernate.annotations.ResultCheckStyle to org.hibernate.jdbc.Expectation in @SQLInsert, @SqlUpdate, @SqlDelete and @SqlDeleteAll annotations.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migrateresultcheckstyletoexpectation.html",
    "package": "org.openrewrite.hibernate.MigrateResultCheckStyleToExpectation",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateResultCheckStyleToExpectation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove invalid @GeneratedValue annotation",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Removes @GeneratedValue annotation from fields that are not also annotated with @Id.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/removeinvalidhibernategeneratedvalueannotation.html",
    "package": "org.openrewrite.hibernate.RemoveInvalidHibernateGeneratedValueAnnotation",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.RemoveInvalidHibernateGeneratedValueAnnotation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace @LazyCollection with jakarta.persistence.FetchType",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Adds the FetchType to jakarta annotations and deletes @LazyCollection.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/replacelazycollectionannotation.html",
    "package": "org.openrewrite.hibernate.ReplaceLazyCollectionAnnotation",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.ReplaceLazyCollectionAnnotation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace boolean type mappings with converters",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "Replaces type mapping of booleans with appropriate attribute converters.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/migratebooleanmappings.html",
    "package": "org.openrewrite.hibernate.MigrateBooleanMappings",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.MigrateBooleanMappings -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace extends EmptyInterceptor with implements Interceptor and potentially StatementInspector",
    "category": "hibernate",
    "sub-category": "hibernate",
    "tags": [
      "hibernate",
      "hibernate"
    ],
    "description": "In Hibernate 6.0 the Interceptor interface received default implementations therefore the NOOP implementation that could be extended was no longer needed. This recipe migrates 5.x Interceptor#onPrepareStatement(String) to 6.0 StatementInspector#inspect().",
    "link": "https://docs.openrewrite.org/recipes/hibernate/emptyinterceptortointerface.html",
    "package": "org.openrewrite.hibernate.EmptyInterceptorToInterface",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.EmptyInterceptorToInterface -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Hibernate Validator 8.0.x",
    "category": "io",
    "sub-category": "hibernate/validator",
    "tags": [
      "io",
      "hibernate/validator"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Hibernate Validator 8.0.x.",
    "link": "https://docs.openrewrite.org/recipes/hibernate/validator/hibernatevalidator_8_0.html",
    "package": "org.openrewrite.hibernate.validator.HibernateValidator_8_0",
    "dependency": "org.openrewrite.recipe:rewrite-hibernate:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-hibernate:RELEASE -Drewrite.activeRecipes=org.openrewrite.hibernate.validator.HibernateValidator_8_0 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add ASLv2 license header",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Adds the Apache Software License Version 2.0 to Java source files which are missing a license header.",
    "link": "https://docs.openrewrite.org/recipes/java/addapache2licenseheader.html",
    "package": "org.openrewrite.java.AddApache2LicenseHeader",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.AddApache2LicenseHeader -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add imports for fully qualified references to types",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Any fully qualified references to Java types will be replaced with corresponding simple names and import statements, provided that it doesn't result in any conflicts with other imports or types declared in the local compilation unit.",
    "link": "https://docs.openrewrite.org/recipes/java/shortenfullyqualifiedtypereferences.html",
    "package": "org.openrewrite.java.ShortenFullyQualifiedTypeReferences",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.ShortenFullyQualifiedTypeReferences -Drewrite.exportDatatables=true"
  },
  {
    "name": "Inline methods annotated with @InlineMe",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Apply inlinings as defined by Error Prone's @InlineMe annotation, or compatible annotations. Uses the template and method arguments to replace method calls. Supports both methods invocations and constructor calls, with optional new imports.",
    "link": "https://docs.openrewrite.org/recipes/java/inlinemethodcalls.html",
    "package": "org.openrewrite.java.InlineMethodCalls",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.InlineMethodCalls -Drewrite.exportDatatables=true"
  },
  {
    "name": "Order imports",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Groups and orders import statements. If a style has been defined, this recipe will order the imports according to that style. If no style is detected, this recipe will default to ordering imports in the same way that IntelliJ IDEA does.",
    "link": "https://docs.openrewrite.org/recipes/java/orderimports.html",
    "package": "org.openrewrite.java.OrderImports",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.OrderImports -Drewrite.exportDatatables=true"
  },
  {
    "name": "Randomize tree IDs",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Scramble the IDs. This was intended as a utility to test en masse different techniques for UUID generation and compare their relative performance outside a microbenchmark.",
    "link": "https://docs.openrewrite.org/recipes/java/randomizeid.html",
    "package": "org.openrewrite.java.RandomizeId",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.RandomizeId -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unused imports",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Remove imports for types that are not referenced. As a precaution against incorrect changes no imports will be removed from any source where unknown types are referenced. The most common cause of unknown types is the use of annotation processors not supported by OpenRewrite, such as lombok.",
    "link": "https://docs.openrewrite.org/recipes/java/removeunusedimports.html",
    "package": "org.openrewrite.java.RemoveUnusedImports",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.RemoveUnusedImports -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify single-element annotation",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "This recipe will remove the attribute value on single-element annotations. According to JLS, a single-element annotation, is a shorthand designed for use with single-element annotation types.",
    "link": "https://docs.openrewrite.org/recipes/java/simplifysingleelementannotation.html",
    "package": "org.openrewrite.java.SimplifySingleElementAnnotation",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.SimplifySingleElementAnnotation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Transform calls to Objects.isNull(..) and Objects.nonNull(..)",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Replace calls to Objects.isNull(..) and Objects.nonNull(..) with a simple null check. Using these methods outside of stream predicates is not idiomatic.",
    "link": "https://docs.openrewrite.org/recipes/java/removeobjectsisnull.html",
    "package": "org.openrewrite.java.RemoveObjectsIsNull",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.RemoveObjectsIsNull -Drewrite.exportDatatables=true"
  },
  {
    "name": "Update source positions",
    "category": "java",
    "sub-category": "java",
    "tags": [
      "java",
      "java"
    ],
    "description": "Calculate start position and length for every LST element.",
    "link": "https://docs.openrewrite.org/recipes/java/updatesourcepositions.html",
    "package": "org.openrewrite.java.UpdateSourcePositions",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.java.UpdateSourcePositions -Drewrite.exportDatatables=true"
  },
  {
    "name": "Adust quarkus.minio.url property key",
    "category": "java",
    "sub-category": "io/quarkus/updates/quarkiverse/minio/minio38",
    "tags": [
      "java",
      "io/quarkus/updates/quarkiverse/minio/minio38"
    ],
    "description": "Adjust quarkus.minio.url property key to quarkus.minio.host.",
    "link": "https://docs.openrewrite.org/recipes/io/quarkus/updates/quarkiverse/minio/minio38/adjusturlpropertyvalue.html",
    "package": "io.quarkus.updates.quarkiverse.minio.minio38.AdjustURLPropertyValue",
    "dependency": "org.openrewrite.recipe:rewrite-third-party:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-third-party:RELEASE -Drewrite.activeRecipes=io.quarkus.updates.quarkiverse.minio.minio38.AdjustURLPropertyValue -Drewrite.exportDatatables=true"
  },
  {
    "name": "Create Jenkinsfile",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Creates a simple base Jenkinsfile in Groovy for a Declarative Pipeline - located in the root of the project.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/createjenkinsfile.html",
    "package": "org.openrewrite.jenkins.CreateJenkinsfile",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.CreateJenkinsfile -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate javax.annotations to SpotBugs annotations",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "SpotBugs is the preferred replacement of JSR-305 annotations for Jenkins plugins.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/javaxannotationstospotbugs.html",
    "package": "org.openrewrite.jenkins.JavaxAnnotationsToSpotbugs",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.JavaxAnnotationsToSpotbugs -Drewrite.exportDatatables=true"
  },
  {
    "name": "Modernize a Jenkins plugin to the latest recommended versions",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "This recipe is intended to change over time to reflect the recommended tooling and recommended Jenkins baseline.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/modernizeplugin.html",
    "package": "org.openrewrite.jenkins.ModernizePlugin",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.ModernizePlugin -Drewrite.exportDatatables=true"
  },
  {
    "name": "Modernize a Jenkins plugin to the latest versions supported by Java 8",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "This recipe is intended to break down the modernization of very old plugins into distinct steps. It allows modernizing all tooling up to the last versions that supported Java 8. This can then be followed by another recipe that makes the jump to Java 11.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/modernizepluginforjava8.html",
    "package": "org.openrewrite.jenkins.ModernizePluginForJava8",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.ModernizePluginForJava8 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add XML declaration to Jelly files",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Ensure the XML declaration <?jelly escape-by-default='true'?> is present in all .jelly files.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/addjellyxmldeclaration.html",
    "package": "org.openrewrite.jenkins.AddJellyXmlDeclaration",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.AddJellyXmlDeclaration -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add or correct Jenkins plugins BOM",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Adds Jenkins plugins BOM at the latest release if the project depends on any managed versions or an outdated BOM is present. BOMs are expected to be synchronized to Jenkins LTS versions, so this will also remove any mismatched BOMs (Such as using Jenkins 2.387.3, but importing bom-2.319.x). If the expected BOM is already added, the version will not be upgraded.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/addpluginsbom.html",
    "package": "org.openrewrite.jenkins.AddPluginsBom",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.AddPluginsBom -Drewrite.exportDatatables=true"
  },
  {
    "name": "Create index.jelly if it doesn't exist",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Jenkins tooling requires src/main/resources/index.jelly exists with a description.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/createindexjelly.html",
    "package": "org.openrewrite.jenkins.CreateIndexJelly",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.CreateIndexJelly -Drewrite.exportDatatables=true"
  },
  {
    "name": "Disables local file resolution for parent POM",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Explicitly sets <relativePath/> to disable file resolution, as recommended in the plugin development guide.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/disablelocalresolutionforparentpom.html",
    "package": "org.openrewrite.jenkins.DisableLocalResolutionForParentPom",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.DisableLocalResolutionForParentPom -Drewrite.exportDatatables=true"
  },
  {
    "name": "Modernize Jenkinsfile",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Updates Jenkinsfile to build with recommended Java versions, platforms, and settings.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/modernizejenkinsfile.html",
    "package": "org.openrewrite.jenkins.ModernizeJenkinsfile",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.ModernizeJenkinsfile -Drewrite.exportDatatables=true"
  },
  {
    "name": "Parse Jenkinsfile as Groovy",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Parse any Jenkinsfile as Groovy code.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/jenkinsfileasgroovy.html",
    "package": "org.openrewrite.jenkins.JenkinsfileAsGroovy",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.JenkinsfileAsGroovy -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use commons-lang3 API Plugin",
    "category": "jenkins",
    "sub-category": "jenkins",
    "tags": [
      "jenkins",
      "jenkins"
    ],
    "description": "Updates pom.xml to depend on commons-lang3-api and exclude commons-lang3 where it is brought in transitively.",
    "link": "https://docs.openrewrite.org/recipes/jenkins/commonslang3toapiplugin.html",
    "package": "org.openrewrite.jenkins.CommonsLang3ToApiPlugin",
    "dependency": "org.openrewrite.recipe:rewrite-jenkins:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-jenkins:RELEASE -Drewrite.activeRecipes=org.openrewrite.jenkins.CommonsLang3ToApiPlugin -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find Kotlin sources and collect data metrics",
    "category": "kotlin",
    "sub-category": "kotlin",
    "tags": [
      "kotlin",
      "kotlin"
    ],
    "description": "Use data table to collect source files types and counts of files with extensions .kt.",
    "link": "https://docs.openrewrite.org/recipes/kotlin/findkotlinsources.html",
    "package": "org.openrewrite.kotlin.FindKotlinSources",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.kotlin.FindKotlinSources -Drewrite.exportDatatables=true"
  },
  {
    "name": "Apache Maven best practices",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Applies best practices to Maven POMs.",
    "link": "https://docs.openrewrite.org/recipes/maven/bestpractices.html",
    "package": "org.openrewrite.maven.BestPractices",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.BestPractices -Drewrite.exportDatatables=true"
  },
  {
    "name": "Enable Develocity build cache",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Add Develocity build cache configuration to any .mvn/ Develocity configuration file that lack existing configuration.",
    "link": "https://docs.openrewrite.org/recipes/maven/enabledevelocitybuildcache.html",
    "package": "org.openrewrite.maven.EnableDevelocityBuildCache",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.EnableDevelocityBuildCache -Drewrite.exportDatatables=true"
  },
  {
    "name": "Modernize obsolete Maven poms",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Very old Maven poms are no longer supported by current versions of Maven. This recipe updates poms with <pomVersion>3</pomVersion> to <modelVersion>4.0.0</modelVersion> of the Maven pom schema. This does not attempt to upgrade old dependencies or plugins and is best regarded as the starting point of a migration rather than an end-point.",
    "link": "https://docs.openrewrite.org/recipes/maven/modernizeobsoletepoms.html",
    "package": "org.openrewrite.maven.ModernizeObsoletePoms",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.ModernizeObsoletePoms -Drewrite.exportDatatables=true"
  },
  {
    "name": "Order POM elements",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Order POM elements according to the recommended order.",
    "link": "https://docs.openrewrite.org/recipes/maven/orderpomelements.html",
    "package": "org.openrewrite.maven.OrderPomElements",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.OrderPomElements -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove duplicate Maven dependencies",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Removes duplicated dependencies in the <dependencies> and <dependencyManagement> sections of the pom.xml.",
    "link": "https://docs.openrewrite.org/recipes/maven/removeduplicatedependencies.html",
    "package": "org.openrewrite.maven.RemoveDuplicateDependencies",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.RemoveDuplicateDependencies -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove redundant explicit dependency and plugin versions",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Remove explicitly-specified dependency/plugin versions when a parent POM's dependencyManagement/pluginManagement specifies the version.",
    "link": "https://docs.openrewrite.org/recipes/maven/removeredundantdependencyversions.html",
    "package": "org.openrewrite.maven.RemoveRedundantDependencyVersions",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.RemoveRedundantDependencyVersions -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove redundant properties",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Remove properties when a parent POM specifies the same property.",
    "link": "https://docs.openrewrite.org/recipes/maven/removeredundantproperties.html",
    "package": "org.openrewrite.maven.RemoveRedundantProperties",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.RemoveRedundantProperties -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unused properties",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Detect and remove Maven property declarations which do not have any usage within the project.",
    "link": "https://docs.openrewrite.org/recipes/maven/removeunusedproperties.html",
    "package": "org.openrewrite.maven.RemoveUnusedProperties",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.RemoveUnusedProperties -Drewrite.exportDatatables=true"
  },
  {
    "name": "Update Maven wrapper",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Update the version of Maven used in an existing Maven wrapper.",
    "link": "https://docs.openrewrite.org/recipes/maven/updatemavenwrapper.html",
    "package": "org.openrewrite.maven.UpdateMavenWrapper",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.UpdateMavenWrapper -Drewrite.exportDatatables=true"
  },
  {
    "name": "Update SCM with Git origin",
    "category": "maven",
    "sub-category": "maven",
    "tags": [
      "maven",
      "maven"
    ],
    "description": "Updates or adds the Maven <scm> tag based on the Git remote origin. By default, only existing Source Control Management (SCM) sections are updated. Set addIfMissing to true to also add missing SCM sections.",
    "link": "https://docs.openrewrite.org/recipes/maven/updatescmfromgitorigin.html",
    "package": "org.openrewrite.maven.UpdateScmFromGitOrigin",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.UpdateScmFromGitOrigin -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Micrometer 1.13",
    "category": "micrometer",
    "sub-category": "micrometer",
    "tags": [
      "micrometer",
      "micrometer"
    ],
    "description": "Migrate applications to the latest Micrometer 1.13 release. This recipe will modify an application's build files, make changes to deprecated/preferred APIs, and migrate configuration settings that have changes between versions as described in the Micrometer 1.13 migration guide.",
    "link": "https://docs.openrewrite.org/recipes/micrometer/upgrademicrometer_1_13.html",
    "package": "org.openrewrite.micrometer.UpgradeMicrometer_1_13",
    "dependency": "org.openrewrite.recipe:rewrite-micrometer:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-micrometer:RELEASE -Drewrite.activeRecipes=org.openrewrite.micrometer.UpgradeMicrometer_1_13 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Convert Micrometer Timer to Observations",
    "category": "micrometer",
    "sub-category": "micrometer",
    "tags": [
      "micrometer",
      "micrometer"
    ],
    "description": "Convert Micrometer Timer to Observations.",
    "link": "https://docs.openrewrite.org/recipes/micrometer/timertoobservation.html",
    "package": "org.openrewrite.micrometer.TimerToObservation",
    "dependency": "org.openrewrite.recipe:rewrite-micrometer:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-micrometer:RELEASE -Drewrite.activeRecipes=org.openrewrite.micrometer.TimerToObservation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade Micrometer",
    "category": "micrometer",
    "sub-category": "micrometer",
    "tags": [
      "micrometer",
      "micrometer"
    ],
    "description": "This recipe will apply changes commonly needed when migrating Micrometer.",
    "link": "https://docs.openrewrite.org/recipes/micrometer/upgrademicrometer.html",
    "package": "org.openrewrite.micrometer.UpgradeMicrometer",
    "dependency": "org.openrewrite.recipe:rewrite-micrometer:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-micrometer:RELEASE -Drewrite.activeRecipes=org.openrewrite.micrometer.UpgradeMicrometer -Drewrite.exportDatatables=true"
  },
  {
    "name": "Print Maven dependency hierarchy in DOT format",
    "category": "micrometer",
    "sub-category": "maven/utilities",
    "tags": [
      "micrometer",
      "maven/utilities"
    ],
    "description": "The DOT language format is specified here.",
    "link": "https://docs.openrewrite.org/recipes/maven/utilities/printmavenasdot.html",
    "package": "org.openrewrite.maven.utilities.PrintMavenAsDot",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.maven.utilities.PrintMavenAsDot -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrates from Netty 4.1.x to Netty 4.2.x",
    "category": "netty",
    "sub-category": "netty",
    "tags": [
      "netty",
      "netty"
    ],
    "description": "Migrate applications to the latest Netty 4.2.x release.",
    "link": "https://docs.openrewrite.org/recipes/netty/upgradenetty_4_1_to_4_2.html",
    "package": "org.openrewrite.netty.UpgradeNetty_4_1_to_4_2",
    "dependency": "org.openrewrite.recipe:rewrite-netty:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-netty:RELEASE -Drewrite.activeRecipes=org.openrewrite.netty.UpgradeNetty_4_1_to_4_2 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to OkHttp 4.x",
    "category": "okhttp",
    "sub-category": "okhttp",
    "tags": [
      "okhttp",
      "okhttp"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to OkHttp 4.x.",
    "link": "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp4.html",
    "package": "org.openrewrite.okhttp.UpgradeOkHttp4",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okhttp.UpgradeOkHttp4 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to OkHttp 5.x",
    "category": "okhttp",
    "sub-category": "okhttp",
    "tags": [
      "okhttp",
      "okhttp"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to OkHttp 5.x.",
    "link": "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp5.html",
    "package": "org.openrewrite.okhttp.UpgradeOkHttp5",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okhttp.UpgradeOkHttp5 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate OkHttp dependencies to 4.x",
    "category": "okhttp",
    "sub-category": "okhttp",
    "tags": [
      "okhttp",
      "okhttp"
    ],
    "description": "Migrate OkHttp dependencies to 4.x.",
    "link": "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp4dependencies.html",
    "package": "org.openrewrite.okhttp.UpgradeOkHttp4Dependencies",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okhttp.UpgradeOkHttp4Dependencies -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate OkHttp dependencies to 5.x",
    "category": "okhttp",
    "sub-category": "okhttp",
    "tags": [
      "okhttp",
      "okhttp"
    ],
    "description": "Migrate OkHttp dependencies to 5.x.",
    "link": "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp5dependencies.html",
    "package": "org.openrewrite.okhttp.UpgradeOkHttp5Dependencies",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okhttp.UpgradeOkHttp5Dependencies -Drewrite.exportDatatables=true"
  },
  {
    "name": "Reorder the arguments of RequestBody.create()",
    "category": "okhttp",
    "sub-category": "okhttp",
    "tags": [
      "okhttp",
      "okhttp"
    ],
    "description": "Reorder the arguments of RequestBody.create() to put the MediaType argument after the String body.",
    "link": "https://docs.openrewrite.org/recipes/okhttp/reorderrequestbodycreatearguments.html",
    "package": "org.openrewrite.okhttp.ReorderRequestBodyCreateArguments",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okhttp.ReorderRequestBodyCreateArguments -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate Okio dependencies to 3.x",
    "category": "okio",
    "sub-category": "okio",
    "tags": [
      "okio",
      "okio"
    ],
    "description": "Migrate Okio dependencies to 3.x.",
    "link": "https://docs.openrewrite.org/recipes/okio/upgradeokio3dependencies.html",
    "package": "org.openrewrite.okio.UpgradeOkio3Dependencies",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okio.UpgradeOkio3Dependencies -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Okio 3.x",
    "category": "okio",
    "sub-category": "okio",
    "tags": [
      "okio",
      "okio"
    ],
    "description": "This recipe will apply changes commonly needed when migrating to Okio 3.x.",
    "link": "https://docs.openrewrite.org/recipes/okio/upgradeokio3.html",
    "package": "org.openrewrite.okio.UpgradeOkio3",
    "dependency": "org.openrewrite.recipe:rewrite-okhttp:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-okhttp:RELEASE -Drewrite.activeRecipes=org.openrewrite.okio.UpgradeOkio3 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Jakarta Swagger Artifacts",
    "category": "org",
    "sub-category": "openapi/swagger",
    "tags": [
      "org",
      "openapi/swagger"
    ],
    "description": "Migrate from javax Swagger artifacts to Jakarta versions.",
    "link": "https://docs.openrewrite.org/recipes/openapi/swagger/usejakartaswaggerartifacts.html",
    "package": "org.openrewrite.openapi.swagger.UseJakartaSwaggerArtifacts",
    "dependency": "org.openrewrite.recipe:rewrite-openapi:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-openapi:RELEASE -Drewrite.activeRecipes=org.openrewrite.openapi.swagger.UseJakartaSwaggerArtifacts -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upgrade to Axonframework 4.x Javax",
    "category": "properties",
    "sub-category": "org/axonframework/migration",
    "tags": [
      "properties",
      "org/axonframework/migration"
    ],
    "description": "Migration file to upgrade an Axon Framework Javax-specific project and remain on Javax.",
    "link": "https://docs.openrewrite.org/recipes/org/axonframework/migration/upgradeaxonframework_4_javax.html",
    "package": "org.axonframework.migration.UpgradeAxonFramework_4_Javax",
    "dependency": "org.openrewrite.recipe:rewrite-third-party:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-third-party:RELEASE -Drewrite.activeRecipes=org.axonframework.migration.UpgradeAxonFramework_4_Javax -Drewrite.exportDatatables=true"
  },
  {
    "name": "Quarkus 1.13 migration from Quarkus 1.11",
    "category": "quarkus",
    "sub-category": "quarkus",
    "tags": [
      "quarkus",
      "quarkus"
    ],
    "description": "Migrates Quarkus 1.11 to 1.13.",
    "link": "https://docs.openrewrite.org/recipes/quarkus/quarkus1to1_13migration.html",
    "package": "org.openrewrite.quarkus.Quarkus1to1_13Migration",
    "dependency": "org.openrewrite.recipe:rewrite-quarkus:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-quarkus:RELEASE -Drewrite.activeRecipes=org.openrewrite.quarkus.Quarkus1to1_13Migration -Drewrite.exportDatatables=true"
  },
  {
    "name": "Configure quarkus-maven-plugin with reasonable defaults",
    "category": "quarkus",
    "sub-category": "quarkus",
    "tags": [
      "quarkus",
      "quarkus"
    ],
    "description": "Configures the quarkus-maven-plugin with reasonable defaults, such as default activated goals and <extensions> configuration.",
    "link": "https://docs.openrewrite.org/recipes/quarkus/configurequarkusmavenpluginwithreasonabledefaults.html",
    "package": "org.openrewrite.quarkus.ConfigureQuarkusMavenPluginWithReasonableDefaults",
    "dependency": "org.openrewrite.recipe:rewrite-quarkus:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-quarkus:RELEASE -Drewrite.activeRecipes=org.openrewrite.quarkus.ConfigureQuarkusMavenPluginWithReasonableDefaults -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate SLF4J Logger injection and usage to Quarkus static Log",
    "category": "quarkus",
    "sub-category": "quarkus",
    "tags": [
      "quarkus",
      "quarkus"
    ],
    "description": "Removes usage of SLF4J Logger fields, adjusts imports, and replaces logger method calls with static Quarkus Log calls, including message formatting and method renaming for parameterized logging.",
    "link": "https://docs.openrewrite.org/recipes/quarkus/slf4jtoquarkuslogger.html",
    "package": "org.openrewrite.quarkus.Slf4jToQuarkusLogger",
    "dependency": "org.openrewrite.recipe:rewrite-quarkus:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-quarkus:RELEASE -Drewrite.activeRecipes=org.openrewrite.quarkus.Slf4jToQuarkusLogger -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use @ConfigMapping",
    "category": "quarkus",
    "sub-category": "quarkus",
    "tags": [
      "quarkus",
      "quarkus"
    ],
    "description": "Migrate Quarkus configuration classes annotated with @ConfigProperties to the equivalent Smallrye @ConfigMapping.",
    "link": "https://docs.openrewrite.org/recipes/quarkus/configpropertiestoconfigmapping.html",
    "package": "org.openrewrite.quarkus.ConfigPropertiesToConfigMapping",
    "dependency": "org.openrewrite.recipe:rewrite-quarkus:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-quarkus:RELEASE -Drewrite.activeRecipes=org.openrewrite.quarkus.ConfigPropertiesToConfigMapping -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Mutiny multi.toHotStream()",
    "category": "quarkus",
    "sub-category": "quarkus",
    "tags": [
      "quarkus",
      "quarkus"
    ],
    "description": "Replace Mutiny API usages of multi.transform().toHotStream() with multi.toHotStream().",
    "link": "https://docs.openrewrite.org/recipes/quarkus/multitransformhotstreamtomultihotstream.html",
    "package": "org.openrewrite.quarkus.MultiTransformHotStreamToMultiHotStream",
    "dependency": "org.openrewrite.recipe:rewrite-quarkus:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-quarkus:RELEASE -Drewrite.activeRecipes=org.openrewrite.quarkus.MultiTransformHotStreamToMultiHotStream -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use native profile in quarkus-maven-plugin",
    "category": "quarkus",
    "sub-category": "quarkus",
    "tags": [
      "quarkus",
      "quarkus"
    ],
    "description": "Migrates the quarkus-maven-plugin deprecated native-image goal. If the native-image goal needs to be removed, this adds <quarkus.package.type>native</quarkus.package.type> to the native profile properties section, given the native profile exists in the pom.xml.",
    "link": "https://docs.openrewrite.org/recipes/quarkus/migratequarkusmavenpluginnativeimagegoal.html",
    "package": "org.openrewrite.quarkus.MigrateQuarkusMavenPluginNativeImageGoal",
    "dependency": "org.openrewrite.recipe:rewrite-quarkus:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-quarkus:RELEASE -Drewrite.activeRecipes=org.openrewrite.quarkus.MigrateQuarkusMavenPluginNativeImageGoal -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find committers on repositories",
    "category": "search",
    "sub-category": "search",
    "tags": [
      "search",
      "search"
    ],
    "description": "List the committers on a repository.",
    "link": "https://docs.openrewrite.org/recipes/search/findcommitters.html",
    "package": "org.openrewrite.search.FindCommitters",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.search.FindCommitters -Drewrite.exportDatatables=true"
  },
  {
    "name": "Find parse to print inequality",
    "category": "search",
    "sub-category": "search",
    "tags": [
      "search",
      "search"
    ],
    "description": "OpenRewrite Parser implementations should produce SourceFile objects whose printAll() method should be byte-for-byte equivalent with the original source file. When this isn't true, recipes can still run on the SourceFile and even produce diffs, but the diffs would fail to apply as a patch to the original source file. Most Parser use Parser#requirePrintEqualsInput to produce a ParseError when they fail to produce a SourceFile that is print idempotent.",
    "link": "https://docs.openrewrite.org/recipes/search/findparsetoprintinequality.html",
    "package": "org.openrewrite.search.FindParseToPrintInequality",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.search.FindParseToPrintInequality -Drewrite.exportDatatables=true"
  },
  {
    "name": "Repository contains file",
    "category": "search",
    "sub-category": "search",
    "tags": [
      "search",
      "search"
    ],
    "description": "Intended to be used primarily as a precondition for other recipes, this recipe checks if a repository contains a specific file or files matching a pattern. If present all files in the repository are marked with a SearchResult marker. If you want to get only the matching file as a search result, use FindSourceFiles instead.",
    "link": "https://docs.openrewrite.org/recipes/search/repositorycontainsfile.html",
    "package": "org.openrewrite.search.RepositoryContainsFile",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.search.RepositoryContainsFile -Drewrite.exportDatatables=true"
  },
  {
    "name": "Migrate to Scala 2.12.+",
    "category": "search",
    "sub-category": "scala/migrate",
    "tags": [
      "search",
      "scala/migrate"
    ],
    "description": "Upgrade the Scala version for compatibility with newer Java versions.",
    "link": "https://docs.openrewrite.org/recipes/scala/migrate/upgradescala_2_12.html",
    "package": "org.openrewrite.scala.migrate.UpgradeScala_2_12",
    "dependency": "org.openrewrite.recipe:rewrite-migrate-java:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-migrate-java:RELEASE -Drewrite.activeRecipes=org.openrewrite.scala.migrate.UpgradeScala_2_12 -Drewrite.exportDatatables=true"
  },
  {
    "name": "Wrap the region string provided on the SDK client builder with Region.of",
    "category": "spring",
    "sub-category": "software/amazon/awssdk/v2migration",
    "tags": [
      "spring",
      "software/amazon/awssdk/v2migration"
    ],
    "description": "Wrap the region string provided on the SDK client builder with Region.of.",
    "link": "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/wrapsdkclientbuilderregionstr.html",
    "package": "software.amazon.awssdk.v2migration.WrapSdkClientBuilderRegionStr",
    "dependency": "org.openrewrite.recipe:rewrite-third-party:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-third-party:RELEASE -Drewrite.activeRecipes=software.amazon.awssdk.v2migration.WrapSdkClientBuilderRegionStr -Drewrite.exportDatatables=true"
  },
  {
    "name": "Code cleanup",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Automatically cleanup code, e.g. remove unnecessary parentheses, simplify expressions.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/codecleanup.html",
    "package": "org.openrewrite.staticanalysis.CodeCleanup",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CodeCleanup -Drewrite.exportDatatables=true"
  },
  {
    "name": "Common static analysis issues",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Resolve common static analysis issues (also known as SAST issues).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/commonstaticanalysis.html",
    "package": "org.openrewrite.staticanalysis.CommonStaticAnalysis",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CommonStaticAnalysis -Drewrite.exportDatatables=true"
  },
  {
    "name": "Modernize BufferedWriter creation & prevent file descriptor leaks",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "The code new BufferedWriter(new FileWriter(f)) creates a BufferedWriter that does not close the underlying FileWriter when it is closed. This can lead to file descriptor leaks as per CWE-755. Use Files.newBufferedWriter to create a BufferedWriter that closes the underlying file descriptor when it is closed.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipes.html",
    "package": "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BufferedWriterCreationRecipes -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace org.apache.commons.lang3.Validate#notNull with Objects#requireNonNull",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace org.apache.commons.lang3.Validate.notNull(..) with Objects.requireNonNull(..).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replaceapachecommonslang3validatenotnullwithobjectsrequirenonnull.html",
    "package": "org.openrewrite.staticanalysis.ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace org.apache.commons.lang3.Validate#notNull with Objects#requireNonNull",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace org.apache.commons.lang3.Validate.notNull(Object) with Objects.requireNonNull(Object).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacevalidatenotnullhavingsingleargwithobjectsrequirenonnull.html",
    "package": "org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingSingleArgWithObjectsRequireNonNull",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingSingleArgWithObjectsRequireNonNull -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify ternary expressions",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Simplifies various types of ternary expressions to improve code readability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifyternaryrecipes.html",
    "package": "org.openrewrite.staticanalysis.SimplifyTernaryRecipes",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyTernaryRecipes -Drewrite.exportDatatables=true"
  },
  {
    "name": "URL Equals and Hash Code",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Uses of equals() and hashCode() cause java.net.URL to make blocking internet connections. Instead, use java.net.URI.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/urlequalshashcoderecipes.html",
    "package": "org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes -Drewrite.exportDatatables=true"
  },
  {
    "name": "'Collection.toArray()' should be passed an array of the proper type",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Using Collection.toArray() without parameters returns an Object[], which requires casting. It is more efficient and clearer to use Collection.toArray(new T[0]) instead.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/collectiontoarrayshouldhavepropertype.html",
    "package": "org.openrewrite.staticanalysis.CollectionToArrayShouldHaveProperType",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CollectionToArrayShouldHaveProperType -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add @Serial annotation to serialVersionUID",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Annotate any serialVersionUID fields with @Serial to indicate it's part of the serialization mechanism.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/addserialannotationtoserialversionuid.html",
    "package": "org.openrewrite.staticanalysis.AddSerialAnnotationToSerialVersionUID",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AddSerialAnnotationToSerialVersionUID -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add missing @Override to overriding and implementing methods",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds @Override to methods overriding superclass methods or implementing interface methods. Annotating methods improves readability by showing the author's intent to override. Additionally, when annotated, the compiler will emit an error when a signature of the overridden method does not match the superclass method.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/missingoverrideannotation.html",
    "package": "org.openrewrite.staticanalysis.MissingOverrideAnnotation",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.MissingOverrideAnnotation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Add serialVersionUID to a Serializable class when missing",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "A serialVersionUID field is strongly recommended in all Serializable classes. If this is not defined on a Serializable class, the compiler will generate this value. If a change is later made to the class, the generated value will change and attempts to deserialize the class will fail.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/addserialversionuidtoserializable.html",
    "package": "org.openrewrite.staticanalysis.AddSerialVersionUidToSerializable",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AddSerialVersionUidToSerializable -Drewrite.exportDatatables=true"
  },
  {
    "name": "Annotate methods which may return null with @Nullable",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Add @Nullable to non-private methods that may return null. By default org.jspecify.annotations.Nullable is used, but through the nullableAnnotationClass option a custom annotation can be provided. When providing a custom nullableAnnotationClass that annotation should be meta annotated with @Target(TYPE_USE). This recipe scans for methods that do not already have a @Nullable annotation and checks their return statements for potential null values. It also identifies known methods from standard libraries that may return null, such as methods from Map, Queue, Deque, NavigableSet, and Spliterator. The return of streams, or lambdas are not taken into account.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/annotatenullablemethods.html",
    "package": "org.openrewrite.staticanalysis.AnnotateNullableMethods",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AnnotateNullableMethods -Drewrite.exportDatatables=true"
  },
  {
    "name": "Annotate null-checked method parameters with @Nullable",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Add @Nullable to parameters of public methods that are explicitly checked for null. By default org.jspecify.annotations.Nullable is used, but through the nullableAnnotationClass option a custom annotation can be provided. When providing a custom nullableAnnotationClass that annotation should be meta annotated with @Target(TYPE_USE). This recipe scans for methods that do not already have parameters annotated with @Nullable annotation and checks their usages for potential null checks.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/annotatenullableparameters.html",
    "package": "org.openrewrite.staticanalysis.AnnotateNullableParameters",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AnnotateNullableParameters -Drewrite.exportDatatables=true"
  },
  {
    "name": "Atomic Boolean, Integer, and Long equality checks compare their values",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "AtomicBoolean#equals(Object), AtomicInteger#equals(Object) and AtomicLong#equals(Object) are only equal to their instance. This recipe converts a.equals(b) to a.get() == b.get().",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/atomicprimitiveequalsusesget.html",
    "package": "org.openrewrite.staticanalysis.AtomicPrimitiveEqualsUsesGet",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AtomicPrimitiveEqualsUsesGet -Drewrite.exportDatatables=true"
  },
  {
    "name": "Avoid boxed boolean expressions",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Under certain conditions the java.lang.Boolean type is used as an expression, and it may throw a NullPointerException if the value is null.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/avoidboxedbooleanexpressions.html",
    "package": "org.openrewrite.staticanalysis.AvoidBoxedBooleanExpressions",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AvoidBoxedBooleanExpressions -Drewrite.exportDatatables=true"
  },
  {
    "name": "BigDecimal rounding constants to RoundingMode enums",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Convert BigDecimal rounding constants to the equivalent RoundingMode enum.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bigdecimalroundingconstantstoenums.html",
    "package": "org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums -Drewrite.exportDatatables=true"
  },
  {
    "name": "Boolean checks should not be inverted",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Ensures that boolean checks are not unnecessarily inverted. Also fixes double negative boolean expressions.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/booleanchecksnotinverted.html",
    "package": "org.openrewrite.staticanalysis.BooleanChecksNotInverted",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BooleanChecksNotInverted -Drewrite.exportDatatables=true"
  },
  {
    "name": "CaseInsensitive comparisons do not alter case",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove String#toLowerCase() or String#toUpperCase() from String#equalsIgnoreCase(..) comparisons.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/caseinsensitivecomparisonsdonotchangecase.html",
    "package": "org.openrewrite.staticanalysis.CaseInsensitiveComparisonsDoNotChangeCase",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CaseInsensitiveComparisonsDoNotChangeCase -Drewrite.exportDatatables=true"
  },
  {
    "name": "Catch clause should do more than just rethrow",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "A catch clause that only rethrows the caught exception is unnecessary. Letting the exception bubble up as normal achieves the same result with less code.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/catchclauseonlyrethrows.html",
    "package": "org.openrewrite.staticanalysis.CatchClauseOnlyRethrows",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CatchClauseOnlyRethrows -Drewrite.exportDatatables=true"
  },
  {
    "name": "Chain StringBuilder.append() calls",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "String concatenation within calls to StringBuilder.append() causes unnecessary memory allocation. Except for concatenations of String literals, which are joined together at compile time. Replaces inefficient concatenations with chained calls to StringBuilder.append().",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/chainstringbuilderappendcalls.html",
    "package": "org.openrewrite.staticanalysis.ChainStringBuilderAppendCalls",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ChainStringBuilderAppendCalls -Drewrite.exportDatatables=true"
  },
  {
    "name": "Change StringBuilder and StringBuffer character constructor argument to String",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Instantiating a StringBuilder or a StringBuffer with a Character results in the int representation of the character being used for the initial size.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/newstringbuilderbufferwithcharargument.html",
    "package": "org.openrewrite.staticanalysis.NewStringBuilderBufferWithCharArgument",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NewStringBuilderBufferWithCharArgument -Drewrite.exportDatatables=true"
  },
  {
    "name": "Changes code to use Java 17's instanceof pattern matching",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds pattern variables to instanceof expressions wherever the same (side effect free) expression is referenced in a corresponding type cast expression within the flow scope of the instanceof. Currently, this recipe supports if statements and ternary operator expressions.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/instanceofpatternmatch.html",
    "package": "org.openrewrite.staticanalysis.InstanceOfPatternMatch",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.InstanceOfPatternMatch -Drewrite.exportDatatables=true"
  },
  {
    "name": "Combine semantically equal catch blocks",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Combine catches in a try that contain semantically equivalent blocks. No change will be made when a caught exception exists if combining catches may change application behavior or type attribution is missing.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/combinesemanticallyequalcatchblocks.html",
    "package": "org.openrewrite.staticanalysis.CombineSemanticallyEqualCatchBlocks",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CombineSemanticallyEqualCatchBlocks -Drewrite.exportDatatables=true"
  },
  {
    "name": "Constructors of an abstract class should not be declared public",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Constructors of abstract classes can only be called in constructors of their subclasses. Therefore the visibility of public constructors are reduced to protected.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/abstractclasspublicconstructor.html",
    "package": "org.openrewrite.staticanalysis.AbstractClassPublicConstructor",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.AbstractClassPublicConstructor -Drewrite.exportDatatables=true"
  },
  {
    "name": "Control flow statement indentation",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Program flow control statements like if, while, and for can omit curly braces when they apply to only a single statement. This recipe ensures that any statements which follow that statement are correctly indented to show they are not part of the flow control statement.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/controlflowindentation.html",
    "package": "org.openrewrite.staticanalysis.ControlFlowIndentation",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ControlFlowIndentation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Convert new BufferedWriter(new FileWriter(File)) to Files.newBufferedWriter(Path)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Convert new BufferedWriter(new FileWriter(f)) to Files.newBufferedWriter(f.toPath()).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipes$bufferedwriterfromnewfilewriterwithfileargumentrecipe.html",
    "package": "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileArgumentRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileArgumentRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Convert new BufferedWriter(new FileWriter(File, boolean)) to Files.newBufferedWriter(Path, StandardOpenOption)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Convert new BufferedWriter(new FileWriter(f, b)) to Files.newBufferedWriter(f.toPath(), b ? StandardOpenOption.APPEND : StandardOpenOption.CREATE).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipes$bufferedwriterfromnewfilewriterwithfileandbooleanargumentsrecipe.html",
    "package": "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileAndBooleanArgumentsRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileAndBooleanArgumentsRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Convert new BufferedWriter(new FileWriter(String)) to Files.newBufferedWriter(Path)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Convert new BufferedWriter(new FileWriter(s)) to Files.newBufferedWriter(new java.io.File(s).toPath()).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipes$bufferedwriterfromnewfilewriterwithstringargumentrecipe.html",
    "package": "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringArgumentRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringArgumentRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Convert new BufferedWriter(new FileWriter(String, boolean)) to Files.newBufferedWriter(Path, StandardOpenOption)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Convert new BufferedWriter(new FileWriter(s, b)) to Files.newBufferedWriter(new java.io.File(s).toPath(), b ? StandardOpenOption.APPEND : StandardOpenOption.CREATE).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipes$bufferedwriterfromnewfilewriterwithstringandbooleanargumentsrecipe.html",
    "package": "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringAndBooleanArgumentsRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringAndBooleanArgumentsRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Convert while (true) with initial if break to loop condition",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Simplifies while (true) loops where the first statement is an if statement that only contains a break. The condition is inverted and moved to the loop condition for better readability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/moveconditionstowhile.html",
    "package": "org.openrewrite.staticanalysis.MoveConditionsToWhile",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.MoveConditionsToWhile -Drewrite.exportDatatables=true"
  },
  {
    "name": "Covariant equals",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checks that classes and records which define a covariant equals() method also override method equals(Object). Covariant equals() means a method that is similar to equals(Object), but with a covariant parameter type (any subtype of Object).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/covariantequals.html",
    "package": "org.openrewrite.staticanalysis.CovariantEquals",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CovariantEquals -Drewrite.exportDatatables=true"
  },
  {
    "name": "Custom import order",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Updates and reorders Java import declarations according to group and order settings compatible with the Checkstyle 'CustomImportOrder' check.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/customimportorder.html",
    "package": "org.openrewrite.staticanalysis.CustomImportOrder",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CustomImportOrder -Drewrite.exportDatatables=true"
  },
  {
    "name": "Default comes last",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Ensure the default case comes last after all the cases in a switch statement.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/defaultcomeslast.html",
    "package": "org.openrewrite.staticanalysis.DefaultComesLast",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.DefaultComesLast -Drewrite.exportDatatables=true"
  },
  {
    "name": "Don't use final on local variables",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove the final modifier keyword from local variables regardless of whether they are used within a local class or an anonymous class.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/nofinalizedlocalvariables.html",
    "package": "org.openrewrite.staticanalysis.NoFinalizedLocalVariables",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoFinalizedLocalVariables -Drewrite.exportDatatables=true"
  },
  {
    "name": "Enum values should be compared with \"==\"",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces Enum equals(java.lang.Object) with Enum == java.lang.Object. An !Enum equals(java.lang.Object) will change to !=.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/compareenumswithequalityoperator.html",
    "package": "org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator -Drewrite.exportDatatables=true"
  },
  {
    "name": "Equals avoids null",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checks that any combination of String literals is on the left side of an equals() comparison. Also checks for String literals assigned to some field (such as someString.equals(anotherString = \"text\")).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/equalsavoidsnull.html",
    "package": "org.openrewrite.staticanalysis.EqualsAvoidsNull",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.EqualsAvoidsNull -Drewrite.exportDatatables=true"
  },
  {
    "name": "Explicit initialization",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checks if any class or object member is explicitly initialized to default for its type value:  - null for object references  - zero for numeric types and char  - and false for boolean Removes explicit initializations where they aren't necessary.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/explicitinitialization.html",
    "package": "org.openrewrite.staticanalysis.ExplicitInitialization",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ExplicitInitialization -Drewrite.exportDatatables=true"
  },
  {
    "name": "Externalizable classes have no-arguments constructor",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Externalizable classes handle both serialization and deserialization and must have a no-args constructor for the deserialization process.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/externalizablehasnoargsconstructor.html",
    "package": "org.openrewrite.staticanalysis.ExternalizableHasNoArgsConstructor",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ExternalizableHasNoArgsConstructor -Drewrite.exportDatatables=true"
  },
  {
    "name": "Fall through",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checks for fall-through in switch statements, adding break statements in locations where a case contains Java code but does not have a break, return, throw, or continue statement.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/fallthrough.html",
    "package": "org.openrewrite.staticanalysis.FallThrough",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.FallThrough -Drewrite.exportDatatables=true"
  },
  {
    "name": "Finalize classes with private constructors",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds the final modifier to classes that expose no public or package-private constructors.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/finalclass.html",
    "package": "org.openrewrite.staticanalysis.FinalClass",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.FinalClass -Drewrite.exportDatatables=true"
  },
  {
    "name": "Finalize local variables",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds the final modifier keyword to local variables which are not reassigned.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/finalizelocalvariables.html",
    "package": "org.openrewrite.staticanalysis.FinalizeLocalVariables",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.FinalizeLocalVariables -Drewrite.exportDatatables=true"
  },
  {
    "name": "Finalize method arguments",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds the final modifier keyword to method parameters.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/finalizemethodarguments.html",
    "package": "org.openrewrite.staticanalysis.FinalizeMethodArguments",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.FinalizeMethodArguments -Drewrite.exportDatatables=true"
  },
  {
    "name": "Finalize private fields",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds the final modifier keyword to private instance variables which are not reassigned.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/finalizeprivatefields.html",
    "package": "org.openrewrite.staticanalysis.FinalizePrivateFields",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.FinalizePrivateFields -Drewrite.exportDatatables=true"
  },
  {
    "name": "Fix String#format and String#formatted expressions",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Fix String#format and String#formatted expressions by replacing \\n newline characters with %n and removing any unused arguments. Note this recipe is scoped to only transform format expressions which do not specify the argument index.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/fixstringformatexpressions.html",
    "package": "org.openrewrite.staticanalysis.FixStringFormatExpressions",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.FixStringFormatExpressions -Drewrite.exportDatatables=true"
  },
  {
    "name": "Fix missing braces",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds missing braces around code such as single-line if, for, while, and do-while block bodies.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/needbraces.html",
    "package": "org.openrewrite.staticanalysis.NeedBraces",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NeedBraces -Drewrite.exportDatatables=true"
  },
  {
    "name": "Hidden field",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Refactor local variables or parameters which shadow a field defined in the same class.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/hiddenfield.html",
    "package": "org.openrewrite.staticanalysis.HiddenField",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.HiddenField -Drewrite.exportDatatables=true"
  },
  {
    "name": "Hide utility class constructor",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Ensures utility classes (classes containing only static methods or fields in their API) do not have a public constructor.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/hideutilityclassconstructor.html",
    "package": "org.openrewrite.staticanalysis.HideUtilityClassConstructor",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.HideUtilityClassConstructor -Drewrite.exportDatatables=true"
  },
  {
    "name": "Inline variable",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Inline variables when they are immediately used to return or throw. Supports both variable declarations and assignments to local variables.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/inlinevariable.html",
    "package": "org.openrewrite.staticanalysis.InlineVariable",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.InlineVariable -Drewrite.exportDatatables=true"
  },
  {
    "name": "Java API best practices",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Use the Java standard library in a way that is most idiomatic.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/javaapibestpractices.html",
    "package": "org.openrewrite.staticanalysis.JavaApiBestPractices",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.JavaApiBestPractices -Drewrite.exportDatatables=true"
  },
  {
    "name": "Jump statements should not be redundant",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Jump statements such as return and continue let you change the default flow of program execution, but jump statements that direct the control flow to the original direction are just a waste of keystrokes.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/noredundantjumpstatements.html",
    "package": "org.openrewrite.staticanalysis.NoRedundantJumpStatements",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoRedundantJumpStatements -Drewrite.exportDatatables=true"
  },
  {
    "name": "Mask credit card numbers",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "When encountering string literals which appear to be credit card numbers, mask the last eight digits with the letter 'X'.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/maskcreditcardnumbers.html",
    "package": "org.openrewrite.staticanalysis.MaskCreditCardNumbers",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.MaskCreditCardNumbers -Drewrite.exportDatatables=true"
  },
  {
    "name": "Modifier order",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Modifiers should be declared in the correct order as recommended by the JLS.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/modifierorder.html",
    "package": "org.openrewrite.staticanalysis.ModifierOrder",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ModifierOrder -Drewrite.exportDatatables=true"
  },
  {
    "name": "Move @Nullable method annotations to the return type",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "This is the way the cool kids do it.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/nullableonmethodreturntype.html",
    "package": "org.openrewrite.staticanalysis.NullableOnMethodReturnType",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NullableOnMethodReturnType -Drewrite.exportDatatables=true"
  },
  {
    "name": "Nested enums are not static",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove static modifier from nested enum types since they are implicitly static.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/nestedenumsarenotstatic.html",
    "package": "org.openrewrite.staticanalysis.NestedEnumsAreNotStatic",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NestedEnumsAreNotStatic -Drewrite.exportDatatables=true"
  },
  {
    "name": "No C-style array declarations",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Change C-Style array declarations int i[]; to int[] i;.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usejavastylearraydeclarations.html",
    "package": "org.openrewrite.staticanalysis.UseJavaStyleArrayDeclarations",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseJavaStyleArrayDeclarations -Drewrite.exportDatatables=true"
  },
  {
    "name": "No double brace initialization",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace List, Map, and Set double brace initialization with an initialization block.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/nodoublebraceinitialization.html",
    "package": "org.openrewrite.staticanalysis.NoDoubleBraceInitialization",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoDoubleBraceInitialization -Drewrite.exportDatatables=true"
  },
  {
    "name": "No multiple variable declarations",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Places each variable declaration in its own statement and on its own line. Using one variable declaration per line encourages commenting and can increase readability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/multiplevariabledeclarations.html",
    "package": "org.openrewrite.staticanalysis.MultipleVariableDeclarations",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.MultipleVariableDeclarations -Drewrite.exportDatatables=true"
  },
  {
    "name": "No primitive wrappers for #toString() or #compareTo(..)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Primitive wrappers should not be instantiated only for #toString() or #compareTo(..) invocations.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/noprimitivewrappersfortostringorcompareto.html",
    "package": "org.openrewrite.staticanalysis.NoPrimitiveWrappersForToStringOrCompareTo",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoPrimitiveWrappersForToStringOrCompareTo -Drewrite.exportDatatables=true"
  },
  {
    "name": "Operator wrapping",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Fixes line wrapping policies on operators.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/operatorwrap.html",
    "package": "org.openrewrite.staticanalysis.OperatorWrap",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.OperatorWrap -Drewrite.exportDatatables=true"
  },
  {
    "name": "Prefer System.getProperty(&quot;user.home&quot;) over System.getenv(&quot;HOME&quot;)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces System.getenv(\"HOME\") with System.getProperty(\"user.home\") for better portability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/prefersystemgetpropertyovergetenv.html",
    "package": "org.openrewrite.staticanalysis.PreferSystemGetPropertyOverGetenv",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.PreferSystemGetPropertyOverGetenv -Drewrite.exportDatatables=true"
  },
  {
    "name": "Prefer direct comparison of numbers",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace a - b == 0 with a == b, a - b != 0 with a != b, a - b < 0 with a < b, and similar transformations for all comparison operators to improve readability and avoid overflow issues.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/preferequalitycomparisonoverdifferencecheck.html",
    "package": "org.openrewrite.staticanalysis.PreferEqualityComparisonOverDifferenceCheck",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.PreferEqualityComparisonOverDifferenceCheck -Drewrite.exportDatatables=true"
  },
  {
    "name": "Prefer increment/decrement and compound assignment operators",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Prefer the use of increment and decrement operators (++, --, +=, -=) over their more verbose equivalents.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/preferincrementoperator.html",
    "package": "org.openrewrite.staticanalysis.PreferIncrementOperator",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.PreferIncrementOperator -Drewrite.exportDatatables=true"
  },
  {
    "name": "Prefer while over for loops",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "When only the condition expression is defined in a for loop, and the initialization and increment expressions are missing, a while loop should be used instead to increase readability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/whileinsteadoffor.html",
    "package": "org.openrewrite.staticanalysis.WhileInsteadOfFor",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.WhileInsteadOfFor -Drewrite.exportDatatables=true"
  },
  {
    "name": "Properly use declaration-site type variance for well-known types",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "When using a method parameter like Function<IN, OUT>, it should rather be Function<? super IN, ? extends OUT>. This recipe checks for method parameters of well-known types.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/commondeclarationsitetypevariances.html",
    "package": "org.openrewrite.staticanalysis.CommonDeclarationSiteTypeVariances",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.CommonDeclarationSiteTypeVariances -Drewrite.exportDatatables=true"
  },
  {
    "name": "Redundant file creation",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove unnecessary intermediate creations of files.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/redundantfilecreation.html",
    "package": "org.openrewrite.staticanalysis.RedundantFileCreation",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RedundantFileCreation -Drewrite.exportDatatables=true"
  },
  {
    "name": "Reformat local variable names to camelCase",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Reformat local variable and method parameter names to camelCase to comply with Java naming convention. The recipe will not rename variables declared in for loop controls or catches with a single character. The first character is set to lower case and existing capital letters are preserved. Special characters that are allowed in java field names $ and _ are removed (unless the name starts with one). If a special character is removed the next valid alphanumeric will be capitalized. Currently, does not support renaming members of classes. The recipe will not rename a variable if the result already exists in the class, conflicts with a java reserved keyword, or the result is blank.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/renamelocalvariablestocamelcase.html",
    "package": "org.openrewrite.staticanalysis.RenameLocalVariablesToCamelCase",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RenameLocalVariablesToCamelCase -Drewrite.exportDatatables=true"
  },
  {
    "name": "Reformat private field names to camelCase",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Reformat private field names to camelCase to comply with Java naming convention. The recipe will not rename fields with default, protected or public access modifiers. The recipe will not rename private constants. The first character is set to lower case and existing capital letters are preserved. Special characters that are allowed in java field names $ and _ are removed. If a special character is removed the next valid alphanumeric will be capitalized. The recipe will not rename a field if the result already exists in the class, conflicts with a java reserved keyword, or the result is blank.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/renameprivatefieldstocamelcase.html",
    "package": "org.openrewrite.staticanalysis.RenamePrivateFieldsToCamelCase",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RenamePrivateFieldsToCamelCase -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove @Nullable and @CheckForNull annotations from primitives",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Primitives can't be null anyway, so these annotations are not useful in this context.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryprimitiveannotations.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryPrimitiveAnnotations",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryPrimitiveAnnotations -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove JavaDoc @param, @return, and @throws with no description",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes @param, @return, and @throws with no description from JavaDocs.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeemptyjavadocparameters.html",
    "package": "org.openrewrite.staticanalysis.RemoveEmptyJavaDocParameters",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveEmptyJavaDocParameters -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove Object.finalize() invocations",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove calls to Object.finalize(). This method is called during garbage collection and calling it manually is misleading.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removecallstoobjectfinalize.html",
    "package": "org.openrewrite.staticanalysis.RemoveCallsToObjectFinalize",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveCallsToObjectFinalize -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove System.out#println statements",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Print statements are often left accidentally after debugging an issue.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removesystemoutprintln.html",
    "package": "org.openrewrite.staticanalysis.RemoveSystemOutPrintln",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveSystemOutPrintln -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove author tags from JavaDocs",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes author tags from JavaDocs to reduce code maintenance.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removejavadocauthortag.html",
    "package": "org.openrewrite.staticanalysis.RemoveJavaDocAuthorTag",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveJavaDocAuthorTag -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove catch for a checked exception if the try block does not throw that exception",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "A refactoring operation may result in a checked exception that is no longer thrown from a try block. This recipe will find and remove unnecessary catch blocks.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessarycatch.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryCatch",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryCatch -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove empty blocks",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove empty blocks that effectively do nothing.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/emptyblock.html",
    "package": "org.openrewrite.staticanalysis.EmptyBlock",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.EmptyBlock -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove extra semicolons",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes not needed semicolons. Semicolons are considered not needed:  * Optional semicolons at the end of try-with-resources,  * after the last enum value if no field or method is defined,  * no statement between two semicolon.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeextrasemicolons.html",
    "package": "org.openrewrite.staticanalysis.RemoveExtraSemicolons",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveExtraSemicolons -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove finalize() method",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Finalizers are deprecated. Use of finalize() can lead to performance issues, deadlocks, hangs, and other undesirable behavior.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/nofinalizer.html",
    "package": "org.openrewrite.staticanalysis.NoFinalizer",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoFinalizer -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove garbage collection invocations",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes calls to System.gc() and Runtime.gc(). When to invoke garbage collection is best left to the JVM.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removecallstosystemgc.html",
    "package": "org.openrewrite.staticanalysis.RemoveCallsToSystemGc",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveCallsToSystemGc -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove redundant casts",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes unnecessary type casts. Does not currently check casts in lambdas and class constructors.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeredundanttypecast.html",
    "package": "org.openrewrite.staticanalysis.RemoveRedundantTypeCast",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveRedundantTypeCast -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove redundant null checks before instanceof",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes redundant null checks before instanceof operations since instanceof returns false for null.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeredundantnullcheckbeforeinstanceof.html",
    "package": "org.openrewrite.staticanalysis.RemoveRedundantNullCheckBeforeInstanceof",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveRedundantNullCheckBeforeInstanceof -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove redundant null checks before literal equals",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes redundant null checks before equals() comparisons when the receiver is a literal string, since literals can never be null and equals() returns false for null arguments.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeredundantnullcheckbeforeliteralequals.html",
    "package": "org.openrewrite.staticanalysis.RemoveRedundantNullCheckBeforeLiteralEquals",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveRedundantNullCheckBeforeLiteralEquals -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove toString() calls on arrays",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "The result from toString() calls on arrays is largely useless. The output does not actually reflect the contents of the array. Arrays.toString(array) should be used instead as it gives the contents of the array.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removetostringcallsfromarrayinstances.html",
    "package": "org.openrewrite.staticanalysis.RemoveToStringCallsFromArrayInstances",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveToStringCallsFromArrayInstances -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unnecessary parentheses",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes unnecessary parentheses from code where extra parentheses pairs are redundant.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryparentheses.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryParentheses",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryParentheses -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unneeded assertions",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove unneeded assertions like assert true, assertTrue(true), or assertFalse(false).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeunneededassertion.html",
    "package": "org.openrewrite.staticanalysis.RemoveUnneededAssertion",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveUnneededAssertion -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unneeded block",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Flatten blocks into inline statements when possible.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeunneededblock.html",
    "package": "org.openrewrite.staticanalysis.RemoveUnneededBlock",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveUnneededBlock -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unused local variables",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "If a local variable is declared but not used, it is dead code and should be removed.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeunusedlocalvariables.html",
    "package": "org.openrewrite.staticanalysis.RemoveUnusedLocalVariables",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveUnusedLocalVariables -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unused private fields",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "If a private field is declared but not used in the program, it can be considered dead code and should therefore be removed.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeunusedprivatefields.html",
    "package": "org.openrewrite.staticanalysis.RemoveUnusedPrivateFields",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveUnusedPrivateFields -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove unused private methods",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "private methods that are never executed are dead code and should be removed.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeunusedprivatemethods.html",
    "package": "org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods -Drewrite.exportDatatables=true"
  },
  {
    "name": "Removes from code Java 14's instanceof pattern matching",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds an explicit variable declaration at the beginning of if statement instead of instanceof pattern matching.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removeinstanceofpatternmatch.html",
    "package": "org.openrewrite.staticanalysis.RemoveInstanceOfPatternMatch",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveInstanceOfPatternMatch -Drewrite.exportDatatables=true"
  },
  {
    "name": "Rename caught exceptions in empty catch blocks to ignored",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Renames caught exceptions in empty catch blocks to ignored. ignored will be incremented by 1 if a namespace conflict exists.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/renameexceptioninemptycatch.html",
    "package": "org.openrewrite.staticanalysis.RenameExceptionInEmptyCatch",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RenameExceptionInEmptyCatch -Drewrite.exportDatatables=true"
  },
  {
    "name": "Rename methods named hashcode, equal, or tostring",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Methods should not be named hashcode, equal, or tostring. Any of these are confusing as they appear to be intended as overridden methods from the Object base class, despite being case-insensitive.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/renamemethodsnamedhashcodeequalortostring.html",
    "package": "org.openrewrite.staticanalysis.RenameMethodsNamedHashcodeEqualOrToString",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RenameMethodsNamedHashcodeEqualOrToString -Drewrite.exportDatatables=true"
  },
  {
    "name": "Rename packages to lowercase",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "By convention all Java package names should contain only lowercase letters, numbers, and dashes. This recipe converts any uppercase letters in package names to be lowercase.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/lowercasepackage.html",
    "package": "org.openrewrite.staticanalysis.LowercasePackage",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.LowercasePackage -Drewrite.exportDatatables=true"
  },
  {
    "name": "Reorder annotations alphabetically",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Consistently order annotations by comparing their simple name.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/reorderannotations.html",
    "package": "org.openrewrite.staticanalysis.ReorderAnnotations",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReorderAnnotations -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace A.class.isInstance(a) with a instanceof A",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "There should be no A.class.isInstance(a), it should be replaced by a instanceof A.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replaceclassisinstancewithinstanceof.html",
    "package": "org.openrewrite.staticanalysis.ReplaceClassIsInstanceWithInstanceof",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceClassIsInstanceWithInstanceof -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace Optional#isPresent() with Optional#ifPresent()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace Optional#isPresent() with Optional#ifPresent(). Please note that this recipe is only suitable for if-blocks that lack an Else-block and have a single condition applied.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replaceoptionalispresentwithifpresent.html",
    "package": "org.openrewrite.staticanalysis.ReplaceOptionalIsPresentWithIfPresent",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceOptionalIsPresentWithIfPresent -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace StringBuilder#append with String",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace StringBuilder.append() with String if you are only concatenating a small number of strings and the code is simple and easy to read, as the compiler can optimize simple string concatenation expressions into a single String object, which can be more efficient than using StringBuilder.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacestringbuilderwithstring.html",
    "package": "org.openrewrite.staticanalysis.ReplaceStringBuilderWithString",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceStringBuilderWithString -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace booleanExpression ? false : true with !booleanExpression",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace ternary expressions like booleanExpression ? false : true with !booleanExpression.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifyternaryrecipes$simplifyternaryfalsetruerecipe.html",
    "package": "org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryFalseTrueRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryFalseTrueRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace booleanExpression ? true : false with booleanExpression",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace ternary expressions like booleanExpression ? true : false with booleanExpression.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifyternaryrecipes$simplifyternarytruefalserecipe.html",
    "package": "org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryTrueFalseRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryTrueFalseRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace calls to Thread.run() with Thread.start()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Thread.run() should not be called directly.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacethreadrunwiththreadstart.html",
    "package": "org.openrewrite.staticanalysis.ReplaceThreadRunWithThreadStart",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceThreadRunWithThreadStart -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace catch(Exception) with specific declared exceptions thrown in the try block",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces catch(Exception e) blocks with a multi-catch block (catch (SpecificException1 | SpecificException2 e)) containing only the exceptions declared thrown by method or constructor invocations within the try block that are not already caught by more specific catch clauses.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/onlycatchdeclaredexceptions.html",
    "package": "org.openrewrite.staticanalysis.OnlyCatchDeclaredExceptions",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.OnlyCatchDeclaredExceptions -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace deprecated Runtime#exec() methods",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace Runtime#exec(String) methods to use exec(String[]) instead because the former is deprecated after Java 18 and is no longer recommended for use by the Java documentation.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacedeprecatedruntimeexecmethods.html",
    "package": "org.openrewrite.staticanalysis.ReplaceDeprecatedRuntimeExecMethods",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceDeprecatedRuntimeExecMethods -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace duplicate String literals",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces String literals with a length of 5 or greater repeated a minimum of 3 times. Qualified String literals include final Strings, method invocations, and new class invocations. Adds a new private static final String or uses an existing equivalent class field. A new variable name will be generated based on the literal value if an existing field does not exist. The generated name will append a numeric value to the variable name if a name already exists in the compilation unit.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replaceduplicatestringliterals.html",
    "package": "org.openrewrite.staticanalysis.ReplaceDuplicateStringLiterals",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceDuplicateStringLiterals -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace invocations of Collections#sort(List, Comparator) with List#sort(Comparator)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "The java.util.Collections#sort(..) implementation defers to the java.util.List#sort(Comparator), replaced it with the java.util.List#sort(Comparator) implementation for better readability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/uselistsort.html",
    "package": "org.openrewrite.staticanalysis.UseListSort",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseListSort -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace java.util.Set#removeAll(java.util.Collection) with java.util.Collection#forEach(Set::remove)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Using java.util.Collection#forEach(Set::remove) rather than java.util.Set#removeAll(java.util.Collection) may improve performance due to a possible O(n^2) complexity.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/useforeachremoveinsteadofsetremoveall.html",
    "package": "org.openrewrite.staticanalysis.UseForEachRemoveInsteadOfSetRemoveAll",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseForEachRemoveInsteadOfSetRemoveAll -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace java.util.Stack with java.util.Deque",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacestackwithdeque.html",
    "package": "org.openrewrite.staticanalysis.ReplaceStackWithDeque",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceStackWithDeque -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace org.apache.commons.lang3.Validate#notNull with Objects#requireNonNull",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace org.apache.commons.lang3.Validate.notNull(Object, String, Object[]) with Objects.requireNonNull(Object, String).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacevalidatenotnullhavingvarargswithobjectsrequirenonnull.html",
    "package": "org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingVarargsWithObjectsRequireNonNull",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingVarargsWithObjectsRequireNonNull -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace redundant String format invocations that are wrapped with PrintStream operations",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces PrintStream.print(String.format(format, ...args)) with PrintStream.printf(format, ...args) (and for println, appends a newline to the format string).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replaceredundantformatwithprintf.html",
    "package": "org.openrewrite.staticanalysis.ReplaceRedundantFormatWithPrintf",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceRedundantFormatWithPrintf -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace referential equality operators with Object equals method invocations when the operands both override Object.equals(Object obj)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Using == or != compares object references, not the equality of two objects. This modifies code where both sides of a binary operation (== or !=) override Object.equals(Object obj) except when the comparison is within an overridden Object.equals(Object obj) method declaration itself. The resulting transformation must be carefully reviewed since any modifications change the program's semantics.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/referentialequalitytoobjectequals.html",
    "package": "org.openrewrite.staticanalysis.ReferentialEqualityToObjectEquals",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReferentialEqualityToObjectEquals -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replace text block with regular string",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace text block with a regular multi-line string.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacetextblockwithstring.html",
    "package": "org.openrewrite.staticanalysis.ReplaceTextBlockWithString",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceTextBlockWithString -Drewrite.exportDatatables=true"
  },
  {
    "name": "Replaces Object.notify() with Object.notifyAll()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Object.notifyAll() and Object.notify() both wake up sleeping threads, but Object.notify() only rouses one while Object.notifyAll() rouses all of them. Since Object.notify() might not wake up the right thread, Object.notifyAll() should be used instead. See this for more information.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/useobjectnotifyall.html",
    "package": "org.openrewrite.staticanalysis.UseObjectNotifyAll",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseObjectNotifyAll -Drewrite.exportDatatables=true"
  },
  {
    "name": "Set charset encoding explicitly when calling String#getBytes",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "This makes the behavior of the code platform neutral. It will not override any existing explicit encodings, even if they don't match the default encoding option.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/explicitcharsetonstringgetbytes.html",
    "package": "org.openrewrite.staticanalysis.ExplicitCharsetOnStringGetBytes",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ExplicitCharsetOnStringGetBytes -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify Arrays.asList(..) with varargs",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Simplifies Arrays.asList() method calls that use explicit array creation to use varargs instead. For example, Arrays.asList(new String[]{\"a\", \"b\", \"c\"}) becomes Arrays.asList(\"a\", \"b\", \"c\").",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifyarraysaslist.html",
    "package": "org.openrewrite.staticanalysis.SimplifyArraysAsList",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyArraysAsList -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify boolean expression",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checks for overly complicated boolean expressions, such as if (b == true), b || true, !false, etc.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifybooleanexpression.html",
    "package": "org.openrewrite.staticanalysis.SimplifyBooleanExpression",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyBooleanExpression -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify boolean expressions using De Morgan's laws",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Applies De Morgan's laws to simplify boolean expressions with negation. Transforms !(a && b) to !a || !b and !(a || b) to !a && !b.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifybooleanexpressionwithdemorgan.html",
    "package": "org.openrewrite.staticanalysis.SimplifyBooleanExpressionWithDeMorgan",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyBooleanExpressionWithDeMorgan -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify boolean return",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Simplifies Boolean expressions by removing redundancies. For example, a && true simplifies to a.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifybooleanreturn.html",
    "package": "org.openrewrite.staticanalysis.SimplifyBooleanReturn",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyBooleanReturn -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify compound statement",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Fixes or removes useless compound statements. For example, removing b &= true, and replacing b &= false with b = false.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifycompoundstatement.html",
    "package": "org.openrewrite.staticanalysis.SimplifyCompoundStatement",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyCompoundStatement -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify consecutive assignments",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Combine consecutive assignments into a single statement where possible.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifyconsecutiveassignments.html",
    "package": "org.openrewrite.staticanalysis.SimplifyConsecutiveAssignments",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyConsecutiveAssignments -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify constant if branch execution",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checks for if expressions that are always true or false and simplifies them.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifyconstantifbranchexecution.html",
    "package": "org.openrewrite.staticanalysis.SimplifyConstantIfBranchExecution",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyConstantIfBranchExecution -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify java.time.Duration units",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Simplifies java.time.Duration units to be more human-readable.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/simplifydurationcreationunits.html",
    "package": "org.openrewrite.staticanalysis.SimplifyDurationCreationUnits",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SimplifyDurationCreationUnits -Drewrite.exportDatatables=true"
  },
  {
    "name": "Simplify lambda blocks to expressions",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Single-line statement lambdas returning a value can be replaced with expression lambdas.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/lambdablocktoexpression.html",
    "package": "org.openrewrite.staticanalysis.LambdaBlockToExpression",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.LambdaBlockToExpression -Drewrite.exportDatatables=true"
  },
  {
    "name": "Sorted set stream should be collected to LinkedHashSet",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Converts set.stream().sorted().collect(Collectors.toSet()) to set.stream().sorted().collect(LinkedHashSet::new).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/sortedsetstreamtolinkedhashset.html",
    "package": "org.openrewrite.staticanalysis.SortedSetStreamToLinkedHashSet",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.SortedSetStreamToLinkedHashSet -Drewrite.exportDatatables=true"
  },
  {
    "name": "Standardize method name casing",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Fixes method names that do not follow standard naming conventions. For example, String getFoo_bar() would be adjusted to String getFooBar() and int DoSomething() would be adjusted to int doSomething().",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/methodnamecasing.html",
    "package": "org.openrewrite.staticanalysis.MethodNameCasing",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.MethodNameCasing -Drewrite.exportDatatables=true"
  },
  {
    "name": "Static methods need not be final",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Static methods do not need to be declared final because they cannot be overridden.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/staticmethodnotfinal.html",
    "package": "org.openrewrite.staticanalysis.StaticMethodNotFinal",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.StaticMethodNotFinal -Drewrite.exportDatatables=true"
  },
  {
    "name": "Ternary operators should not be nested",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Nested ternary operators can be hard to read quickly. Prefer simpler constructs for improved readability. If supported, this recipe will try to replace nested ternaries with switch expressions.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/ternaryoperatorsshouldnotbenested.html",
    "package": "org.openrewrite.staticanalysis.TernaryOperatorsShouldNotBeNested",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.TernaryOperatorsShouldNotBeNested -Drewrite.exportDatatables=true"
  },
  {
    "name": "Typecast parenthesis padding",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Fixes whitespace padding between a typecast type identifier and the enclosing left and right parentheses. For example, when configured to remove spacing, ( int ) 0L; becomes (int) 0L;.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/typecastparenpad.html",
    "package": "org.openrewrite.staticanalysis.TypecastParenPad",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.TypecastParenPad -Drewrite.exportDatatables=true"
  },
  {
    "name": "URL Equals",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Uses of equals() cause java.net.URL to make blocking internet connections. Instead, use java.net.URI.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/urlequalshashcoderecipes$urlequalsrecipe.html",
    "package": "org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLEqualsRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLEqualsRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "URL Hash Code",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Uses of hashCode() cause java.net.URL to make blocking internet connections. Instead, use java.net.URI.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/urlequalshashcoderecipes$urlhashcoderecipe.html",
    "package": "org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLHashCodeRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLHashCodeRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unnecessary String#toString",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove unnecessary String#toString invocations on objects which are already a string.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/notostringonstringtype.html",
    "package": "org.openrewrite.staticanalysis.NoToStringOnStringType",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoToStringOnStringType -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unnecessary String#valueOf(..)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace unnecessary String#valueOf(..) method invocations with the argument directly. This occurs when the argument to String#valueOf(arg) is a string literal, such as String.valueOf(\"example\"). Or, when the String#valueOf(..) invocation is used in a concatenation, such as \"example\" + String.valueOf(\"example\").",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/novalueofonstringtype.html",
    "package": "org.openrewrite.staticanalysis.NoValueOfOnStringType",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoValueOfOnStringType -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unnecessary close in try-with-resources",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove unnecessary AutoCloseable#close() statements in try-with-resources.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessarycloseintrywithresources.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryCloseInTryWithResources",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryCloseInTryWithResources -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unnecessary explicit type arguments",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "When explicit type arguments are inferable by the compiler, they may be removed.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryexplicittypearguments.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryExplicitTypeArguments",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryExplicitTypeArguments -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unnecessary return as last statement in void method",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Removes return from a void method if it's the last statement.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryreturnaslaststatement.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryReturnAsLastStatement",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryReturnAsLastStatement -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unnecessary throws",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Remove unnecessary throws declarations. This recipe will only remove unused, checked exceptions if:   - The declaring class or the method declaration is final.  - The method declaration is static or private.  - The method overrides a method declaration in a super class and the super class does not throw the exception.  - The method is public or protected and the exception is not documented via a JavaDoc as a @throws tag.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unnecessarythrows.html",
    "package": "org.openrewrite.staticanalysis.UnnecessaryThrows",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnnecessaryThrows -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unwrap @Repeatable annotations",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Java 8 introduced the concept of @Repeatable annotations, making the wrapper annotation unnecessary.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unwraprepeatableannotations.html",
    "package": "org.openrewrite.staticanalysis.UnwrapRepeatableAnnotations",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnwrapRepeatableAnnotations -Drewrite.exportDatatables=true"
  },
  {
    "name": "Unwrap else block after return or throw statement",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Unwraps the else block when the if block ends with a return or throw statement, reducing nesting and improving code readability.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/unwrapelseafterreturn.html",
    "package": "org.openrewrite.staticanalysis.UnwrapElseAfterReturn",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UnwrapElseAfterReturn -Drewrite.exportDatatables=true"
  },
  {
    "name": "Upper case literal suffixes",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Using upper case literal suffixes for declaring literals is less ambiguous, e.g., 1l versus 1L.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/uppercaseliteralsuffixes.html",
    "package": "org.openrewrite.staticanalysis.UpperCaseLiteralSuffixes",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UpperCaseLiteralSuffixes -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Collection interfaces",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Use Deque, List, Map, ConcurrentMap, Queue, and Set instead of implemented collections. Replaces the return type of public method declarations and the variable type public variable declarations.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usecollectioninterfaces.html",
    "package": "org.openrewrite.staticanalysis.UseCollectionInterfaces",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseCollectionInterfaces -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Collection#isEmpty() instead of comparing size()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Also check for not isEmpty() when testing for not equal to zero size.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/isemptycalloncollections.html",
    "package": "org.openrewrite.staticanalysis.IsEmptyCallOnCollections",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.IsEmptyCallOnCollections -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Collections#emptyList(), emptyMap(), and emptySet()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces Collections#EMPTY_... with methods that return generic types.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/noemptycollectionwithrawtype.html",
    "package": "org.openrewrite.staticanalysis.NoEmptyCollectionWithRawType",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoEmptyCollectionWithRawType -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Empty Array for Collection.toArray()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacecollectiontoarrayargwithemptyarray.html",
    "package": "org.openrewrite.staticanalysis.ReplaceCollectionToArrayArgWithEmptyArray",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceCollectionToArrayArgWithEmptyArray -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use Map#containsKey",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "map.keySet().contains(a) can be simplified to map.containsKey(a).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usemapcontainskey.html",
    "package": "org.openrewrite.staticanalysis.UseMapContainsKey",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseMapContainsKey -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use StandardCharset constants",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces Charset.forName(java.lang.String) with the equivalent StandardCharset constant.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usestandardcharset.html",
    "package": "org.openrewrite.staticanalysis.UseStandardCharset",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseStandardCharset -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use String.contentEquals(CharSequence) instead of String.equals(CharSequence.toString())",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Use String.contentEquals(CharSequence) instead of String.equals(CharSequence.toString()).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/equalstocontentequals.html",
    "package": "org.openrewrite.staticanalysis.EqualsToContentEquals",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.EqualsToContentEquals -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use String.equals() on String literals",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "String.equals() should be used when checking value equality on String literals. Using == or != compares object references, not the actual value of the Strings. This only modifies code where at least one side of the binary operation (== or !=) is a String literal, such as \"someString\" == someVariable;. This is to prevent inadvertently changing code where referential equality is the user's intent.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/stringliteralequality.html",
    "package": "org.openrewrite.staticanalysis.StringLiteralEquality",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.StringLiteralEquality -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use String::replace() when first parameter is not a real regular expression",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "When String::replaceAll is used, the first argument should be a real regular expression. If it’s not the case, String::replace does exactly the same thing as String::replaceAll without the performance drawback of the regex.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usestringreplace.html",
    "package": "org.openrewrite.staticanalysis.UseStringReplace",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseStringReplace -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use System.lineSeparator()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace calls to System.getProperty(\"line.separator\") with System.lineSeparator().",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usesystemlineseparator.html",
    "package": "org.openrewrite.staticanalysis.UseSystemLineSeparator",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseSystemLineSeparator -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use comparison rather than equality checks in for conditions",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Testing for loop termination using an equality operator (== and !=) is dangerous, because it could set up an infinite loop. Using a relational operator instead makes it harder to accidentally write an infinite loop.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/noequalityinforcondition.html",
    "package": "org.openrewrite.staticanalysis.NoEqualityInForCondition",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.NoEqualityInForCondition -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use explicit types on lambda arguments",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Adds explicit types on lambda arguments, which are otherwise optional. This can make the code clearer and easier to read. This does not add explicit types on arguments when the lambda has one or two parameters and does not have a block body, as things are considered more readable in those cases. For example, stream.map((a, b) -> a.length); will not have explicit types added.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/explicitlambdaargumenttypes.html",
    "package": "org.openrewrite.staticanalysis.ExplicitLambdaArgumentTypes",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ExplicitLambdaArgumentTypes -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use indexOf(String, int)",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces indexOf(String) in binary operations if the compared value is an int and not less than 1.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/indexofchecksshoulduseastartposition.html",
    "package": "org.openrewrite.staticanalysis.IndexOfChecksShouldUseAStartPosition",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.IndexOfChecksShouldUseAStartPosition -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use lambda expressions instead of anonymous classes",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Instead of anonymous class declarations, use a lambda where possible. Using lambdas to replace anonymous classes can lead to more expressive and maintainable code, improve code readability, reduce code duplication, and achieve better performance in some cases.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/uselambdaforfunctionalinterface.html",
    "package": "org.openrewrite.staticanalysis.UseLambdaForFunctionalInterface",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseLambdaForFunctionalInterface -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use method references in lambda",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces the single statement lambdas o -> o instanceOf X, o -> (A) o, o -> System.out.println(o), o -> o != null, o -> o == null with the equivalent method reference.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replacelambdawithmethodreference.html",
    "package": "org.openrewrite.staticanalysis.ReplaceLambdaWithMethodReference",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceLambdaWithMethodReference -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use primitive wrapper valueOf method",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "The constructor of all primitive types has been deprecated in favor of using the static factory method valueOf available for each of the primitive type wrappers.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/primitivewrapperclassconstructortovalueof.html",
    "package": "org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf -Drewrite.exportDatatables=true"
  },
  {
    "name": "Use the diamond operator",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "The diamond operator (<>) should be used. Java 7 introduced the diamond operator to reduce the verbosity of generics code. For instance, instead of having to declare a List's type in both its declaration and its constructor, you can now simplify the constructor declaration with <>, and the compiler will infer the type.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/usediamondoperator.html",
    "package": "org.openrewrite.staticanalysis.UseDiamondOperator",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.UseDiamondOperator -Drewrite.exportDatatables=true"
  },
  {
    "name": "Week Year (YYYY) should not be used for date formatting",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "For most dates Week Year (YYYY) and Year (yyyy) yield the same results. However, on the last week of December and the first week of January, Week Year could produce unexpected results.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/replaceweekyearwithyear.html",
    "package": "org.openrewrite.staticanalysis.ReplaceWeekYearWithYear",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ReplaceWeekYearWithYear -Drewrite.exportDatatables=true"
  },
  {
    "name": "Write octal values as decimal",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Developers may not recognize octal values as such, mistaking them instead for decimal values.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/writeoctalvaluesasdecimal.html",
    "package": "org.openrewrite.staticanalysis.WriteOctalValuesAsDecimal",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.WriteOctalValuesAsDecimal -Drewrite.exportDatatables=true"
  },
  {
    "name": "finalize() calls super",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Overrides of Object#finalize() should call super.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/objectfinalizecallssuper.html",
    "package": "org.openrewrite.staticanalysis.ObjectFinalizeCallsSuper",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ObjectFinalizeCallsSuper -Drewrite.exportDatatables=true"
  },
  {
    "name": "for loop counters incremented in update",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "The increment should be moved to the loop's increment clause if possible.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/forloopincrementinupdate.html",
    "package": "org.openrewrite.staticanalysis.ForLoopIncrementInUpdate",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ForLoopIncrementInUpdate -Drewrite.exportDatatables=true"
  },
  {
    "name": "for loop counters should use postfix operators",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace for loop control variables using pre-increment (++i) or pre-decrement (--i) operators with their post-increment (i++) or post-decrement (i++) notation equivalents.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/forloopcontrolvariablepostfixoperators.html",
    "package": "org.openrewrite.staticanalysis.ForLoopControlVariablePostfixOperators",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.ForLoopControlVariablePostfixOperators -Drewrite.exportDatatables=true"
  },
  {
    "name": "hashCode() should not be called on array instances",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replace hashCode() calls on arrays with Arrays.hashCode() because the results from hashCode() are not helpful.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/removehashcodecallsfromarrayinstances.html",
    "package": "org.openrewrite.staticanalysis.RemoveHashCodeCallsFromArrayInstances",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.RemoveHashCodeCallsFromArrayInstances -Drewrite.exportDatatables=true"
  },
  {
    "name": "indexOf should not compare greater than zero",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Replaces String#indexOf(String) > 0 and List#indexOf(Object) > 0 with >=1. Checking indexOf against >0 ignores the first element, whereas >-1 is inclusive of the first element. For clarity, >=1 is used, because >0 and >=1 are semantically equal. Using >0 may appear to be a mistake with the intent of including all elements. If the intent is to check whether a value in included in a String or List, the String#contains(String) or List#contains(Object) methods may be better options altogether.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/indexofshouldnotcomparegreaterthanzero.html",
    "package": "org.openrewrite.staticanalysis.IndexOfShouldNotCompareGreaterThanZero",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.IndexOfShouldNotCompareGreaterThanZero -Drewrite.exportDatatables=true"
  },
  {
    "name": "indexOf() replaceable by contains()",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Checking if a value is included in a String or List using indexOf(value)>-1 or indexOf(value)>=0 can be replaced with contains(value).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/indexofreplaceablebycontains.html",
    "package": "org.openrewrite.staticanalysis.IndexOfReplaceableByContains",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.IndexOfReplaceableByContains -Drewrite.exportDatatables=true"
  },
  {
    "name": "new BigDecimal(double) should not be used",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "Use of new BigDecimal(double) constructor can lead to loss of precision. Use BigDecimal.valueOf(double) instead. For example writing new BigDecimal(0.1) does not create a BigDecimal which is exactly equal to 0.1, but it is equal to 0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a double (or, for that matter, as a binary fraction of any finite length).",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/bigdecimaldoubleconstructorrecipe.html",
    "package": "org.openrewrite.staticanalysis.BigDecimalDoubleConstructorRecipe",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.BigDecimalDoubleConstructorRecipe -Drewrite.exportDatatables=true"
  },
  {
    "name": "switch statements should have at least 3 case clauses",
    "category": "staticanalysis",
    "sub-category": "staticanalysis",
    "tags": [
      "staticanalysis",
      "staticanalysis"
    ],
    "description": "switch statements are useful when many code paths branch depending on the value of a single expression. For just one or two code paths, the code will be more readable with if statements.",
    "link": "https://docs.openrewrite.org/recipes/staticanalysis/minimumswitchcases.html",
    "package": "org.openrewrite.staticanalysis.MinimumSwitchCases",
    "dependency": "org.openrewrite.recipe:rewrite-static-analysis:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-static-analysis:RELEASE -Drewrite.activeRecipes=org.openrewrite.staticanalysis.MinimumSwitchCases -Drewrite.exportDatatables=true"
  },
  {
    "name": "WebClientRules Refaster recipes",
    "category": "terraform",
    "sub-category": "tech/picnic/errorprone/refasterrules",
    "tags": [
      "terraform",
      "tech/picnic/errorprone/refasterrules"
    ],
    "description": "Refaster rules related to expressions dealing with org.springframework.web.reactive.function.client.WebClient and related types. Source.",
    "link": "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipes.html",
    "package": "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes",
    "dependency": "org.openrewrite.recipe:rewrite-third-party:RELEASE",
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.recipeArtifactCoordinates=org.openrewrite.recipe:rewrite-third-party:RELEASE -Drewrite.activeRecipes=tech.picnic.errorprone.refasterrules.WebClientRulesRecipes -Drewrite.exportDatatables=true"
  },
  {
    "name": "End of Line @ End of File (EOL @ EOF)",
    "category": "text",
    "sub-category": "text",
    "tags": [
      "text",
      "text"
    ],
    "description": "Ensure that the file ends with the newline character.  Note: If this recipe modifies a file, it converts the file into plain text. As such, this recipe should be run after any recipe that modifies the language-specific LST.",
    "link": "https://docs.openrewrite.org/recipes/text/endoflineatendoffile.html",
    "package": "org.openrewrite.text.EndOfLineAtEndOfFile",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.text.EndOfLineAtEndOfFile -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove empty XML Tag",
    "category": "xml",
    "sub-category": "xml",
    "tags": [
      "xml",
      "xml"
    ],
    "description": "Removes XML tags that do not have attributes or children, including self closing tags.",
    "link": "https://docs.openrewrite.org/recipes/xml/removeemptyxmltags.html",
    "package": "org.openrewrite.xml.RemoveEmptyXmlTags",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.xml.RemoveEmptyXmlTags -Drewrite.exportDatatables=true"
  },
  {
    "name": "Remove trailing whitespace",
    "category": "xml",
    "sub-category": "xml",
    "tags": [
      "xml",
      "xml"
    ],
    "description": "Remove any extra trailing whitespace from the end of each line.",
    "link": "https://docs.openrewrite.org/recipes/xml/removetrailingwhitespace.html",
    "package": "org.openrewrite.xml.RemoveTrailingWhitespace",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.xml.RemoveTrailingWhitespace -Drewrite.exportDatatables=true"
  },
  {
    "name": "Coalesce YAML properties",
    "category": "yaml",
    "sub-category": "yaml",
    "tags": [
      "yaml",
      "yaml"
    ],
    "description": "Simplify nested map hierarchies into their simplest dot separated property form, similar to how Spring Boot interprets application.yml files.",
    "link": "https://docs.openrewrite.org/recipes/yaml/coalesceproperties.html",
    "package": "org.openrewrite.yaml.CoalesceProperties",
    "dependency": null,
    "mvn-command-line": "mvn -U org.openrewrite.maven:rewrite-maven-plugin:run -Drewrite.activeRecipes=org.openrewrite.yaml.CoalesceProperties -Drewrite.exportDatatables=true"
  }
]